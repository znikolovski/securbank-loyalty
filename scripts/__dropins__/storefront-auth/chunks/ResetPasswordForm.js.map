{"version":3,"file":"ResetPasswordForm.js","sources":["../../src/hooks/components/useResetPasswordForm.tsx","../../src/components/ResetPasswordForm/ResetPasswordForm.tsx"],"sourcesContent":["import { requestPasswordResetEmail } from '@/auth/api';\nimport { getFormValues } from '@/auth/lib/getFormValues';\nimport { useCallback, useState } from 'preact/hooks';\nimport { UseResetPasswordFormProps } from '@/auth/types';\nimport { useText } from '@adobe/elsie/i18n';\nimport { checkIsFunction } from '@/auth/lib/checkIsFunction';\n\nexport const useResetPasswordForm = ({\n  routeSignIn,\n  onErrorCallback,\n  setActiveComponent,\n  handleSetInLineAlertProps,\n}: UseResetPasswordFormProps) => {\n  const translations = useText({\n    successPasswordResetEmailNotification:\n      'Auth.Notification.successPasswordResetEmailNotification',\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const submitResetPassword = useCallback(\n    async (event: any): Promise<void> => {\n      event.preventDefault();\n      setIsLoading(true);\n\n      const formValues = getFormValues(event.target);\n\n      if (formValues && formValues.email) {\n        const requestPasswordResetEmailResponse =\n          await requestPasswordResetEmail(formValues.email);\n\n        if (requestPasswordResetEmailResponse.success) {\n          handleSetInLineAlertProps?.({\n            type: 'success',\n            text: translations.successPasswordResetEmailNotification.replace(\n              '{email}',\n              formValues.email\n            ),\n          });\n        } else {\n          onErrorCallback?.(requestPasswordResetEmailResponse);\n\n          handleSetInLineAlertProps?.({\n            type: 'error',\n            text: requestPasswordResetEmailResponse.message,\n          });\n        }\n      }\n\n      setIsLoading(false);\n    },\n    [\n      handleSetInLineAlertProps,\n      onErrorCallback,\n      translations.successPasswordResetEmailNotification,\n    ]\n  );\n\n  const redirectToSignInPage = useCallback(() => {\n    if (checkIsFunction(setActiveComponent)) {\n      setActiveComponent('signInForm');\n\n      return;\n    }\n\n    if (checkIsFunction(routeSignIn)) {\n      window.location.href = routeSignIn();\n    }\n  }, [setActiveComponent, routeSignIn]);\n\n  return {\n    isLoading,\n    submitResetPassword,\n    redirectToSignInPage,\n  };\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/auth/components/ResetPasswordForm/ResetPasswordForm.css';\nimport { useResetPasswordForm } from '@/auth/hooks/components/useResetPasswordForm';\nimport { ResetPasswordFormProps } from '@/auth/types';\nimport { ChevronDown as ChevronLeft } from '@adobe/elsie/icons';\nimport { Button, Form, Title } from '@/auth/components/UI';\nimport { useInLineAlert } from '@/auth/hooks/useInLineAlert';\nimport { InLineAlert } from '@adobe/elsie/components';\nimport { useText } from '@adobe/elsie/i18n';\nimport { simplifyTransformAttributesForm } from '@/auth/lib/simplifyTransformAttributesForm';\nimport { DEFAULT__RESET_PASSWORD_EMAIL_FIELD } from '@/auth/configs/defaultCreateUserConfigs';\n\nexport const ResetPasswordForm: FunctionComponent<\n  ResetPasswordFormProps & HTMLAttributes<HTMLDivElement>\n> = ({\n  formSize = 'default',\n  routeSignIn,\n  setActiveComponent,\n  onErrorCallback,\n  ...props\n}) => {\n  const translations = useText({\n    title: 'Auth.ResetPasswordForm.title',\n    buttonPrimary: 'Auth.ResetPasswordForm.buttonPrimary',\n    buttonSecondary: 'Auth.ResetPasswordForm.buttonSecondary',\n  });\n\n  const { inLineAlertProps, handleSetInLineAlertProps } = useInLineAlert();\n\n  const { isLoading, submitResetPassword, redirectToSignInPage } =\n    useResetPasswordForm({\n      routeSignIn,\n      setActiveComponent,\n      onErrorCallback,\n      handleSetInLineAlertProps,\n    });\n\n  return (\n    <div\n      {...props}\n      className={classes(['auth-resetPasswordForm', formSize])}\n      data-testid=\"resetPasswordForm\"\n    >\n      <Title\n        text={translations.title}\n        bottomLine={false}\n        className=\"auth-resetPasswordForm__title\"\n      />\n      {inLineAlertProps.text ? (\n        <InLineAlert\n          className=\"auth-resetPasswordForm__notification\"\n          type={inLineAlertProps.type}\n          /* \n          TODO - Remove when SDK will be updated\n          https://jira.corp.adobe.com/browse/USF-1240\n          */\n          // @ts-ignore\n          variant=\"secondary\"\n          heading={inLineAlertProps.text}\n          icon={inLineAlertProps.icon}\n        />\n      ) : null}\n      <Form\n        name=\"resetPassword_form\"\n        className=\"auth-resetPasswordForm__form\"\n        submitCallback={submitResetPassword}\n        isLoading={isLoading}\n        fieldsConfig={simplifyTransformAttributesForm(\n          DEFAULT__RESET_PASSWORD_EMAIL_FIELD\n        )}\n      >\n        <div className=\"auth-resetPasswordForm__buttons\">\n          <Button\n            type=\"button\"\n            variant=\"tertiary\"\n            style={{ padding: '0' }}\n            icon={<ChevronLeft style={{ transform: 'rotate(90deg)' }} />}\n            buttonText={translations.buttonSecondary}\n            enableLoader={false}\n            onClick={redirectToSignInPage}\n          />\n          <Button\n            type=\"submit\"\n            buttonText={translations.buttonPrimary}\n            variant=\"primary\"\n            enableLoader={isLoading}\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n"],"names":["useResetPasswordForm","routeSignIn","onErrorCallback","setActiveComponent","handleSetInLineAlertProps","translations","useText","successPasswordResetEmailNotification","isLoading","setIsLoading","useState","submitResetPassword","useCallback","event","preventDefault","formValues","getFormValues","target","email","requestPasswordResetEmailResponse","requestPasswordResetEmail","success","type","text","replace","message","redirectToSignInPage","checkIsFunction","location","href","ResetPasswordForm","formSize","props","title","buttonPrimary","buttonSecondary","inLineAlertProps","useInLineAlert","_jsxs","className","classes","children","_jsx","Title","bottomLine","InLineAlert","variant","heading","icon","Form","name","submitCallback","fieldsConfig","simplifyTransformAttributesForm","DEFAULT__RESET_PASSWORD_EMAIL_FIELD","Button","style","padding","ChevronLeft","transform","buttonText","enableLoader","onClick"],"mappings":"ghBAOO,MAAMA,EAAuBA,CAAC,CACnCC,YAAAA,EACAC,gBAAAA,EACAC,mBAAAA,EACAC,0BAAAA,CACyB,IAAM,CAC/B,MAAMC,EAAeC,EAAQ,CAC3BC,sCACE,yDAAA,CACH,EACK,CAACC,EAAWC,CAAY,EAAIC,EAAS,EAAK,EAE1CC,EAAsBC,EAC1B,MAAOC,GAA8B,CACnCA,EAAMC,eAAe,EACrBL,EAAa,EAAI,EAEXM,MAAAA,EAAaC,EAAcH,EAAMI,MAAM,EAEzCF,GAAAA,GAAcA,EAAWG,MAAO,CAClC,MAAMC,EACJ,MAAMC,EAA0BL,EAAWG,KAAK,EAE9CC,EAAkCE,QACRjB,GAAA,MAAAA,EAAA,CAC1BkB,KAAM,UACNC,KAAMlB,EAAaE,sCAAsCiB,QACvD,UACAT,EAAWG,KACb,CAAA,IAGFhB,GAAAA,MAAAA,EAAkBiB,GAEUf,GAAA,MAAAA,EAAA,CAC1BkB,KAAM,QACNC,KAAMJ,EAAkCM,OAAAA,GAG9C,CAEAhB,EAAa,EAAK,GAEpB,CACEL,EACAF,EACAG,EAAaE,qCAAqC,CAEtD,EAEMmB,EAAuBd,EAAY,IAAM,CACzCe,GAAAA,EAAgBxB,CAAkB,EAAG,CACvCA,EAAmB,YAAY,EAE/B,MACF,CAEIwB,EAAgB1B,CAAW,IACtB2B,OAAAA,SAASC,KAAO5B,IACzB,EACC,CAACE,EAAoBF,CAAW,CAAC,EAE7B,MAAA,CACLO,UAAAA,EACAG,oBAAAA,EACAe,qBAAAA,CAAAA,CAEJ,EC5DaI,EAETA,CAAC,CACHC,SAAAA,EAAW,UACX9B,YAAAA,EACAE,mBAAAA,EACAD,gBAAAA,EACA,GAAG8B,CACL,IAAM,CACJ,MAAM3B,EAAeC,EAAQ,CAC3B2B,MAAO,+BACPC,cAAe,uCACfC,gBAAiB,wCAAA,CAClB,EAEK,CAAEC,iBAAAA,EAAkBhC,0BAAAA,GAA8BiC,EAAe,EAEjE,CAAE7B,UAAAA,EAAWG,oBAAAA,EAAqBe,qBAAAA,GACtC1B,EAAqB,CACnBC,YAAAA,EACAE,mBAAAA,EACAD,gBAAAA,EACAE,0BAAAA,CAAAA,CACD,EAEH,OACEkC,EAAA,MAAA,CAAA,GACMN,EACJO,UAAWC,EAAQ,CAAC,yBAA0BT,CAAQ,CAAC,EACvD,cAAY,oBAAmBU,SAAA,CAE/BC,EAACC,EAAK,CACJpB,KAAMlB,EAAa4B,MACnBW,WAAY,GACZL,UAAU,+BACX,CAAA,EACAH,EAAiBb,KAChBmB,EAACG,EAAW,CACVN,UAAU,uCACVjB,KAAMc,EAAiBd,KAMvBwB,QAAQ,YACRC,QAASX,EAAiBb,KAC1ByB,KAAMZ,EAAiBY,IAAAA,CACxB,EACC,KACJN,EAACO,EAAI,CACHC,KAAK,qBACLX,UAAU,+BACVY,eAAgBxC,EAChBH,UAAAA,EACA4C,aAAcC,EACZC,CACF,EAAEb,SAEFH,EAAA,MAAA,CAAKC,UAAU,kCAAiCE,SAAA,CAC9CC,EAACa,EAAM,CACLjC,KAAK,SACLwB,QAAQ,WACRU,MAAO,CAAEC,QAAS,GAAI,EACtBT,KAAMN,EAACgB,EAAW,CAACF,MAAO,CAAEG,UAAW,eAAgB,CAAA,CAAI,EAC3DC,WAAYvD,EAAa8B,gBACzB0B,aAAc,GACdC,QAASpC,CAAAA,CACV,EACDgB,EAACa,EAAM,CACLjC,KAAK,SACLsC,WAAYvD,EAAa6B,cACzBY,QAAQ,UACRe,aAAcrD,CAAAA,CACf,CAAC,CAAA,CACC,CAAA,CACD,CAAC,CAAA,CACJ,CAET"}