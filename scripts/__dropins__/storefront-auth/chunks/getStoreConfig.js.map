{"version":3,"file":"getStoreConfig.js","sources":["../../src/data/transforms/transform-auth.ts","../../src/configs/cookieConfigs.ts","../../src/data/transforms/transform-store-config.ts","../../src/data/transforms/transform-customer-data.ts","../../src/lib/fetch-error.ts","../../src/api/getCustomerData/graphql/getCustomerData.graphql.ts","../../src/api/getCustomerData/getCustomerData.ts","../../src/api/getCustomerToken/graphql/getCustomerToken.graphql.ts","../../src/lib/cookieUtils.ts","../../src/lib/acdl.ts","../../src/api/getCustomerToken/getCustomerToken.ts","../../src/api/getStoreConfig/graphql/getStoreConfig.graphql.ts","../../src/api/getStoreConfig/getStoreConfig.ts"],"sourcesContent":["// Doc - https://experienceleague.adobe.com/en/docs/commerce-merchant-services/data-connection/event-forwarding/events#signin\nexport const loginContext = (ctx: any) => {\n  return {\n    personalEmail: {\n      address: ctx?.email || '',\n    },\n    userAccount: {\n      login: true,\n    },\n    commerce: {\n      commerceScope: {\n        storeCode: ctx?.store_code || '',\n      },\n    },\n  };\n};\n\n// Doc - https://experienceleague.adobe.com/en/docs/commerce-merchant-services/data-connection/event-forwarding/events#signout\nexport const logoutContext = (ctx: any) => {\n  return {\n    userAccount: {\n      logout: true,\n    },\n    commerce: {\n      commerceScope: {\n        storeCode: ctx?.store_code || '',\n      },\n    },\n  };\n};\n\n// Doc - https://experienceleague.adobe.com/en/docs/commerce-merchant-services/data-connection/event-forwarding/events#createaccount\nexport const createAccountContext = (ctx: any) => {\n  return {\n    personalEmail: {\n      address: ctx?.email || '',\n    },\n    userAccount: {\n      updateProfile: ctx?.updateProfile,\n    },\n    commerce: {\n      commerceScope: {\n        storeCode: ctx?.store_code || '',\n      },\n    },\n  };\n};\n","const COOKIE_NAMES = {\n  auth_dropin_user_token: 'auth_dropin_user_token',\n  auth_dropin_firstname: 'auth_dropin_firstname',\n};\n\nconst COOKIE_LIFETIME = 3600;\n\nexport { COOKIE_NAMES, COOKIE_LIFETIME };\n","import { getStoreConfigResponse } from '@/auth/types';\nimport { COOKIE_LIFETIME } from '@/auth/configs/cookieConfigs';\nimport { StoreConfigModel } from '../models';\n\nexport const transformStoreConfig = (\n  response: getStoreConfigResponse\n): StoreConfigModel => {\n  return {\n    autocompleteOnStorefront:\n      response?.data?.storeConfig?.autocomplete_on_storefront || false,\n    // Need information about min length in response undefined\n    minLength: response?.data?.storeConfig?.minimum_password_length || 3,\n    requiredCharacterClasses:\n      +response?.data?.storeConfig?.required_character_classes_number || 0,\n    createAccountConfirmation:\n      response?.data?.storeConfig?.create_account_confirmation || false,\n    customerAccessTokenLifetime:\n      response?.data?.storeConfig?.customer_access_token_lifetime *\n        COOKIE_LIFETIME || COOKIE_LIFETIME,\n  };\n};\n","import { getCustomerDataResponse } from '@/auth/types';\nimport { CustomerDataModel } from '../models';\n\nexport const transformCustomerData = (\n  response: getCustomerDataResponse\n): CustomerDataModel => {\n  return {\n    email: response?.data?.customer?.email || '',\n    firstname: response?.data?.customer?.firstname || '',\n    lastname: response?.data?.customer?.lastname || '',\n  };\n};\n","/** Actions */\nexport const handleFetchError = (errors: Array<{ message: string }>) => {\n  const errorMessage = errors.map((e: any) => e.message).join(' ');\n\n  throw Error(errorMessage);\n};\n","export const GET_CUSTOMER_DATA = `\n  query GET_CUSTOMER_DATA {\n    customer {\n      firstname\n      lastname\n      email\n    }\n  }\n`;\n","import { fetchGraphQl, setFetchGraphQlHeader, config } from '@/auth/api';\nimport { GET_CUSTOMER_DATA } from './graphql/getCustomerData.graphql';\nimport { handleNetworkError } from '@/auth/lib/network-error';\nimport { CustomerDataModel } from '@/auth/data/models';\nimport { transformCustomerData } from '@/auth/data/transforms';\nimport { handleFetchError } from '@/auth/lib/fetch-error';\n\nexport const getCustomerData = async (\n  user_token: string\n): Promise<CustomerDataModel> => {\n  if (user_token) {\n    const { authHeaderConfig } = config.getConfig();\n\n    setFetchGraphQlHeader(\n      authHeaderConfig.header,\n      authHeaderConfig.tokenPrefix\n        ? `${authHeaderConfig.tokenPrefix} ${user_token}`\n        : user_token\n    );\n  }\n\n  return await fetchGraphQl(GET_CUSTOMER_DATA, {\n    method: 'GET',\n    cache: 'force-cache',\n  })\n    .then((response) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return transformCustomerData(response);\n    })\n    .catch(handleNetworkError);\n};\n","export const GET_CUSTOMER_TOKEN = `\n  mutation GET_CUSTOMER_TOKEN($email: String!, $password: String!) {\n    generateCustomerToken(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n","/* eslint-disable no-useless-escape */\nimport { getStoreConfig } from '@/auth/api';\nimport { COOKIE_LIFETIME } from '@/auth/configs/cookieConfigs';\n\nexport const deleteCookie = (cookieName: string) => {\n  document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n};\n\nexport const getCookiesLifetime = async () => {\n  try {\n    const storeConfigString = sessionStorage.getItem('storeConfig');\n    const cachedStoreConfig = storeConfigString\n      ? JSON.parse(storeConfigString)\n      : {};\n\n    let accessTokenLifeTime = cachedStoreConfig.customerAccessTokenLifetime;\n\n    if (!accessTokenLifeTime) {\n      const storeConfig = await getStoreConfig();\n\n      sessionStorage.setItem('storeConfig', JSON.stringify(storeConfig));\n\n      accessTokenLifeTime =\n        storeConfig?.customerAccessTokenLifetime || COOKIE_LIFETIME;\n    }\n\n    return `Max-Age=${accessTokenLifeTime}`;\n  } catch (error) {\n    console.error('getCookiesLifetime() Error:', error);\n    return `Max-Age=${COOKIE_LIFETIME}`;\n  }\n};\n","import {\n  createAccountContext,\n  loginContext,\n  logoutContext,\n} from '../data/transforms';\n\nenum EventsList {\n  CREATE_ACCOUNT_EVENT = 'create-account',\n  SIGN_IN = 'sign-in',\n  SIGN_OUT = 'sign-out',\n}\n\nconst AUTH_CONTEXT = 'authContext';\n\nconst events = {\n  CREATE_ACCOUNT: EventsList.CREATE_ACCOUNT_EVENT,\n  SIGN_IN: EventsList.SIGN_IN,\n  SIGN_OUT: EventsList.SIGN_OUT,\n};\n\nfunction setContext(name: string, data: any) {\n  const adobeDataLayer = (window as any).adobeDataLayer || [];\n\n  adobeDataLayer.push({\n    [name]: null,\n  });\n\n  adobeDataLayer.push({\n    [name]: data,\n  });\n}\n\nexport function pushEvent(event: string) {\n  const adobeDataLayer = (window as any).adobeDataLayer || [];\n\n  adobeDataLayer.push((acdl: any) => {\n    const state = acdl.getState ? acdl.getState() : {};\n\n    acdl.push({\n      event,\n      eventInfo: {\n        ...state,\n      },\n    });\n  });\n}\n\nfunction createAccountEvent(eventData: any) {\n  const transformedEventData = createAccountContext(eventData);\n\n  setContext(AUTH_CONTEXT, transformedEventData);\n\n  pushEvent(events.CREATE_ACCOUNT);\n}\n\nfunction loginEvent(eventData: any) {\n  const transformedEventData = loginContext(eventData);\n\n  setContext(AUTH_CONTEXT, transformedEventData);\n\n  pushEvent(events.SIGN_IN);\n}\n\nfunction logoutEvent(eventData: any) {\n  const transformedEventData = logoutContext(eventData);\n\n  setContext(AUTH_CONTEXT, transformedEventData);\n\n  pushEvent(events.SIGN_OUT);\n}\n\nconst publishEvents = (eventType: string, eventParams: any) => {\n  const storeConfigRaw = sessionStorage.getItem('storeConfig');\n  const storeConfig = storeConfigRaw ? JSON.parse(storeConfigRaw) : {};\n\n  const eventData = { ...storeConfig, ...eventParams };\n\n  switch (eventType) {\n    case EventsList.CREATE_ACCOUNT_EVENT:\n      createAccountEvent(eventData);\n      break;\n\n    case EventsList.SIGN_IN:\n      loginEvent(eventData);\n      break;\n\n    case EventsList.SIGN_OUT:\n      logoutEvent(eventData);\n      break;\n\n    default:\n      return null;\n  }\n};\n\nexport { EventsList, publishEvents };\n","import { handleNetworkError } from '@/auth/lib/network-error';\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { GET_CUSTOMER_TOKEN } from './graphql/getCustomerToken.graphql';\nimport { getCustomerData } from '../getCustomerData';\nimport { inLineAlertInterface } from '@/auth/types';\nimport { events } from '@adobe/event-bus';\nimport { COOKIE_NAMES } from '@/auth/configs/cookieConfigs';\nimport { getCookiesLifetime } from '@/auth/lib/cookieUtils';\nimport { publishEvents, EventsList } from '@/auth/lib/acdl';\n\ninterface getCustomerTokenProps {\n  email: string;\n  password: string;\n  handleSetInLineAlertProps: (value?: inLineAlertInterface) => void;\n  translations: Record<string, string>;\n  onErrorCallback?: (value?: unknown) => void;\n}\n\nexport const getCustomerToken = async ({\n  email,\n  password,\n  translations,\n  onErrorCallback,\n  handleSetInLineAlertProps,\n}: getCustomerTokenProps): Promise<{\n  errorMessage: string;\n  userName: string;\n}> => {\n  const response = await fetchGraphQl(GET_CUSTOMER_TOKEN, {\n    method: 'POST',\n    variables: { email, password },\n  }).catch(handleNetworkError);\n\n  if (!response?.data?.generateCustomerToken?.token) {\n    // Fallback error message\n    const defaultErrorMessage = translations.customerTokenErrorMessage;\n    const errorMessage = response?.errors\n      ? response.errors[0].message\n      : defaultErrorMessage;\n\n    onErrorCallback?.(errorMessage);\n    handleSetInLineAlertProps?.({ type: 'error', text: errorMessage });\n    publishEvents(EventsList.SIGN_IN, {});\n\n    return { errorMessage, userName: '' };\n  }\n\n  const userToken = response?.data?.generateCustomerToken?.token;\n\n  const responseCustomer = await getCustomerData(userToken);\n\n  if (!responseCustomer?.firstname || !responseCustomer?.email) {\n    const errorMessage = translations.customerTokenErrorMessage;\n\n    onErrorCallback?.(errorMessage);\n    handleSetInLineAlertProps?.({ type: 'error', text: errorMessage });\n    publishEvents(EventsList.SIGN_IN, {});\n\n    return { errorMessage, userName: '' };\n  }\n\n  const userName = responseCustomer?.firstname;\n  const userEmail = responseCustomer?.email;\n  const cookiesLifetime = await getCookiesLifetime();\n\n  document.cookie = `${COOKIE_NAMES.auth_dropin_firstname}=${userName}; path=/; ${cookiesLifetime}; `;\n  document.cookie = `${COOKIE_NAMES.auth_dropin_user_token}=${userToken}; path=/; ${cookiesLifetime}; `;\n\n  events.emit('authenticated', !!userToken);\n\n  publishEvents(EventsList.SIGN_IN, userEmail ? { email: userEmail } : {});\n\n  return { errorMessage: '', userName };\n};\n","export const GET_STORE_CONFIG = `\n  query GET_STORE_CONFIG {\n    storeConfig {\n      autocomplete_on_storefront\n      minimum_password_length\n      required_character_classes_number\n      store_code\n      store_name\n      store_group_code\n      locale\n      create_account_confirmation\n      customer_access_token_lifetime\n    }\n  }\n`;\n","import { getStoreConfigResponse } from '@/auth/types';\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { GET_STORE_CONFIG } from './graphql/getStoreConfig.graphql';\nimport { handleNetworkError } from '@/auth/lib/network-error';\nimport { transformStoreConfig } from '@/auth/data/transforms';\nimport { StoreConfigModel } from '@/auth/data/models';\nimport { handleFetchError } from '@/auth/lib/fetch-error';\n\nexport const getStoreConfig = async (): Promise<StoreConfigModel> => {\n  return await fetchGraphQl(GET_STORE_CONFIG, {\n    method: 'GET',\n    cache: 'force-cache',\n  })\n    .then((response: getStoreConfigResponse) => {\n      if (response.errors?.length) return handleFetchError(response.errors);\n\n      return transformStoreConfig(response);\n    })\n    .catch(handleNetworkError);\n};\n"],"names":["loginContext","ctx","personalEmail","address","email","userAccount","login","commerce","commerceScope","storeCode","store_code","logoutContext","logout","createAccountContext","updateProfile","COOKIE_NAMES","auth_dropin_user_token","auth_dropin_firstname","COOKIE_LIFETIME","transformStoreConfig","response","autocompleteOnStorefront","data","storeConfig","autocomplete_on_storefront","minLength","minimum_password_length","requiredCharacterClasses","required_character_classes_number","createAccountConfirmation","create_account_confirmation","customerAccessTokenLifetime","customer_access_token_lifetime","transformCustomerData","customer","firstname","lastname","handleFetchError","errors","errorMessage","map","e","message","join","Error","GET_CUSTOMER_DATA","getCustomerData","user_token","authHeaderConfig","config","getConfig","header","tokenPrefix","fetchGraphQl","method","cache","then","length","catch","handleNetworkError","GET_CUSTOMER_TOKEN","deleteCookie","cookieName","cookie","getCookiesLifetime","storeConfigString","sessionStorage","getItem","accessTokenLifeTime","JSON","parse","getStoreConfig","setItem","stringify","error","EventsList","CREATE_ACCOUNT_EVENT","SIGN_IN","SIGN_OUT","AUTH_CONTEXT","events","CREATE_ACCOUNT","setContext","name","adobeDataLayer","window","push","pushEvent","event","acdl","state","getState","eventInfo","createAccountEvent","eventData","transformedEventData","loginEvent","logoutEvent","publishEvents","eventType","eventParams","storeConfigRaw","getCustomerToken","password","translations","onErrorCallback","handleSetInLineAlertProps","variables","generateCustomerToken","token","defaultErrorMessage","customerTokenErrorMessage","type","text","userName","userToken","responseCustomer","userEmail","cookiesLifetime","document","emit","GET_STORE_CONFIG"],"mappings":"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"}