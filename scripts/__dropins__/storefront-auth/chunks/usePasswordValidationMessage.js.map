{"version":3,"file":"usePasswordValidationMessage.js","sources":["../../node_modules/@adobe/elsie/src/icons/Check.svg","../../node_modules/@adobe/elsie/src/icons/Close.svg","../../node_modules/@adobe/elsie/src/icons/Minus.svg","../../src/components/PasswordValidationMessage/PasswordValidationMessage.tsx","../../src/hooks/api/useGetStoreConfigs.tsx","../../src/lib/validationUniqueSymbolsPassword.ts","../../src/hooks/components/usePasswordValidationMessage.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgCheck = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Icon_Check_Base\", \"data-name\": \"Icon \\\\u2013 Check \\\\u2013 Base\", xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Large\" }, /* @__PURE__ */ React.createElement(\"rect\", { id: \"Placement_area\", \"data-name\": \"Placement area\", width: 24, height: 24, fill: \"#fff\", opacity: 0 }), /* @__PURE__ */ React.createElement(\"g\", { id: \"Check_icon\", \"data-name\": \"Check icon\", transform: \"translate(303.874 1434.583)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", id: \"Path_884137\", \"data-name\": \"Path 884137\", d: \"M148,494.611l4.248,4.244,8.538-8.522\", transform: \"translate(-446.265 -1917.177)\", fill: \"none\", stroke: \"currentColor\" }))));\nexport default SvgCheck;\n","import * as React from \"react\";\nconst SvgClose = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 5.64001L5.62988 18.37\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 18.37L5.62988 5.64001\", stroke: \"currentColor\" }));\nexport default SvgClose;\n","import * as React from \"react\";\nconst SvgMinus = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M17.3332 11.75H6.6665\", strokeWidth: 1.5, strokeLinecap: \"square\", strokeLinejoin: \"round\", vectorEffect: \"non-scaling-stroke\", fill: \"none\", stroke: \"currentColor\" }));\nexport default SvgMinus;\n","import { FunctionComponent, JSX } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/auth/components/PasswordValidationMessage/PasswordValidationMessage.css';\nimport { ValidateLengthConfigProps, statusTypes } from '@/auth/types';\nimport {\n  Check,\n  Close as ErrorValidation,\n  Minus as PendingValidation,\n} from '@adobe/elsie/icons';\nimport { useText } from '@adobe/elsie/i18n';\n\nexport interface PasswordValidationMessageProps {\n  validateLengthConfig?: ValidateLengthConfigProps;\n  isValidUniqueSymbols?: statusTypes;\n  minLength?: number;\n  requiredCharacterClasses?: number;\n}\n\nconst getIcon: { [key: string]: JSX.Element } = {\n  pending: <PendingValidation />,\n  success: <Check />,\n  error: <ErrorValidation style={{ fill: 'red' }} />,\n};\n\nexport const PasswordValidationMessage: FunctionComponent<\n  PasswordValidationMessageProps & HTMLAttributes<HTMLDivElement>\n> = ({\n  minLength = 0,\n  requiredCharacterClasses = 0,\n  isValidUniqueSymbols = 'pending',\n  validateLengthConfig = { status: '', icon: '', message: '' },\n  ...props\n}) => {\n  const translations = useText({\n    chartTwoSymbols: 'Auth.PasswordValidationMessage.chartTwoSymbols',\n    chartThreeSymbols: 'Auth.PasswordValidationMessage.chartThreeSymbols',\n    chartFourSymbols: 'Auth.PasswordValidationMessage.chartFourSymbols',\n  });\n\n  const getMessage = (chart: number) => {\n    switch (chart) {\n      case 2:\n        return translations.chartTwoSymbols;\n      case 3:\n        return translations.chartThreeSymbols;\n      case 4:\n        return translations.chartFourSymbols;\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div {...props} className={classes(['elsie-password-validation-message'])}>\n      {minLength > 0 ? (\n        <div\n          className={`auth-passwordValidationMessage_item auth-passwordValidationMessage_item--status-${validateLengthConfig.status}`}\n          data-testid={`auth-passwordValidationMessage_item--${validateLengthConfig.icon}`}\n        >\n          {getIcon[validateLengthConfig.icon as string]}\n          <span className={`${validateLengthConfig.status}`}>\n            {validateLengthConfig.message}\n          </span>\n        </div>\n      ) : null}\n      {requiredCharacterClasses && requiredCharacterClasses >= 2 ? (\n        <div\n          className={`auth-passwordValidationMessage_item auth-passwordValidationMessage_item--status-${isValidUniqueSymbols}`}\n          data-testid={`auth-passwordValidationMessage_item--${isValidUniqueSymbols}`}\n        >\n          {getIcon[isValidUniqueSymbols]}\n          <span className={`pending`}>\n            {getMessage(requiredCharacterClasses)}\n          </span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import { getStoreConfig } from '@/auth/api';\nimport { useEffect, useState } from 'preact/hooks';\nimport { StoreConfigModel } from '../../data/models';\n\nexport const useGetStoreConfigs = () => {\n  const [isEmailConfirmationRequired, setIsEmailConfirmationRequired] =\n    useState(false);\n  const [passwordConfigs, setPasswordConfigs] = useState<{\n    minLength: number;\n    requiredCharacterClasses: number;\n  } | null>(null);\n\n  useEffect(() => {\n    const storeConfigString = sessionStorage.getItem('storeConfig');\n\n    const cachedStoreConfig: StoreConfigModel = storeConfigString\n      ? JSON.parse(storeConfigString)\n      : null;\n\n    if (cachedStoreConfig) {\n      const { minLength, requiredCharacterClasses, createAccountConfirmation } =\n        cachedStoreConfig;\n\n      setPasswordConfigs({\n        minLength,\n        requiredCharacterClasses,\n      });\n\n      setIsEmailConfirmationRequired(createAccountConfirmation);\n    } else {\n      getStoreConfig().then((response) => {\n        if (response) {\n          const {\n            minLength,\n            requiredCharacterClasses,\n            createAccountConfirmation,\n          } = response;\n\n          sessionStorage.setItem('storeConfig', JSON.stringify(response));\n\n          setPasswordConfigs({\n            minLength,\n            requiredCharacterClasses,\n          });\n\n          setIsEmailConfirmationRequired(createAccountConfirmation);\n        }\n      });\n    }\n  }, []);\n\n  return { passwordConfigs, isEmailConfirmationRequired };\n};\n","export const validationUniqueSymbolsPassword = (\n  password: string,\n  uniqueSymbolsCount: number\n) => {\n  if (uniqueSymbolsCount <= 1) return true;\n\n  const numbers = /[0-9]/.test(password) ? 1 : 0;\n  const lowerCaseLetter = /[a-z]/.test(password) ? 1 : 0;\n  const upperCaseLetter = /[A-Z]/.test(password) ? 1 : 0;\n  const specialSymbols = /[^a-zA-Z0-9\\s]/.test(password) ? 1 : 0;\n\n  return (\n    numbers + lowerCaseLetter + upperCaseLetter + specialSymbols >=\n    uniqueSymbolsCount\n  );\n};\n","import { validationUniqueSymbolsPassword } from '@/auth/lib/validationUniqueSymbolsPassword';\nimport { useEffect, useMemo, useState } from 'preact/hooks';\nimport { ValidateLengthConfigProps, statusTypes } from '@/auth/types';\nimport { useText } from '@adobe/elsie/i18n';\n\ninterface UsePasswordValidationMessageProps {\n  passwordConfigs: {\n    minLength: number;\n    requiredCharacterClasses: number;\n  } | null;\n  isClickSubmit: boolean;\n  password: string;\n}\n\nexport const usePasswordValidationMessage = ({\n  passwordConfigs,\n  isClickSubmit,\n  password,\n}: UsePasswordValidationMessageProps) => {\n  const translations = useText({\n    messageLengthPassword:\n      'Auth.PasswordValidationMessage.messageLengthPassword',\n  });\n\n  const [isValidUniqueSymbols, setIsValidUniqueSymbols] =\n    useState<statusTypes>('pending');\n\n  useEffect(() => {\n    if (!passwordConfigs) return;\n\n    const result = validationUniqueSymbolsPassword(\n      password,\n      passwordConfigs.requiredCharacterClasses\n    );\n\n    if (isClickSubmit && password.length > 0) {\n      result\n        ? setIsValidUniqueSymbols('success')\n        : setIsValidUniqueSymbols('error');\n    } else if (isClickSubmit && password.length === 0) {\n      setIsValidUniqueSymbols('pending');\n    } else {\n      result\n        ? setIsValidUniqueSymbols('success')\n        : setIsValidUniqueSymbols('pending');\n    }\n  }, [isClickSubmit, passwordConfigs, password]);\n\n  const defaultLengthMessage: ValidateLengthConfigProps | undefined =\n    useMemo(() => {\n      if (!passwordConfigs) return;\n\n      const defaultMessage: ValidateLengthConfigProps = {\n        status: 'pending',\n        icon: 'pending',\n        message: translations.messageLengthPassword?.replace(\n          '{minLength}',\n          `${passwordConfigs.minLength}`\n        ),\n      };\n\n      if (password.length && password.length >= passwordConfigs.minLength) {\n        return { ...defaultMessage, icon: 'success', status: 'success' };\n      }\n\n      if (password.length && password.length < passwordConfigs.minLength) {\n        return isClickSubmit\n          ? { ...defaultMessage, icon: 'error', status: 'error' }\n          : { ...defaultMessage, icon: 'pending', status: 'pending' };\n      }\n\n      return defaultMessage;\n    }, [\n      passwordConfigs,\n      translations.messageLengthPassword,\n      password?.length,\n      isClickSubmit,\n    ]);\n\n  return { isValidUniqueSymbols, defaultLengthMessage };\n};\n"],"names":["SvgCheck","props","React","SvgClose","SvgMinus","getIcon","pending","_jsx","PendingValidation","success","Check","error","ErrorValidation","style","fill","PasswordValidationMessage","minLength","requiredCharacterClasses","isValidUniqueSymbols","validateLengthConfig","status","icon","message","translations","useText","chartTwoSymbols","chartThreeSymbols","chartFourSymbols","getMessage","chart","_jsxs","className","classes","children","useGetStoreConfigs","isEmailConfirmationRequired","setIsEmailConfirmationRequired","useState","passwordConfigs","setPasswordConfigs","useEffect","storeConfigString","sessionStorage","getItem","cachedStoreConfig","JSON","parse","createAccountConfirmation","getStoreConfig","then","response","setItem","stringify","validationUniqueSymbolsPassword","password","uniqueSymbolsCount","numbers","test","lowerCaseLetter","upperCaseLetter","specialSymbols","usePasswordValidationMessage","isClickSubmit","messageLengthPassword","setIsValidUniqueSymbols","result","length","defaultLengthMessage","useMemo","defaultMessage","replace"],"mappings":"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","x_google_ignoreList":[0,1,2]}