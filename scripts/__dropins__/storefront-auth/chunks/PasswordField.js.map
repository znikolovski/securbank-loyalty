{"version":3,"file":"PasswordField.js","sources":["../../node_modules/@adobe/elsie/src/icons/Locker.svg","../../src/icons/Eye.svg","../../src/icons/EyeClose.svg","../../src/components/UI/PasswordField/PasswordField.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgLocker = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#clip0_3785_11045)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M7.33 11H16.66C17.4 11 17.99 11.81 17.99 12.82V19.18C17.99 20.18 17.39 21 16.66 21H7.33C6.59 21 6 20.19 6 19.18V12.82C6 11.82 6.6 11 7.33 11Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M8.5 10.86V6.5C8.5 4.57 10.07 3 12 3C13.93 3 15.5 4.57 15.5 6.5V10.86\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"clip0_3785_11045\" }, /* @__PURE__ */ React.createElement(\"rect\", { width: 13.5, height: 19.5, fill: \"white\", transform: \"translate(5.25 2.25)\" }))));\nexport default SvgLocker;\n","import * as React from \"react\";\nconst SvgEye = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M11.9952 8.05896C7.85898 8.04913 4.04561 10.1916 1.96743 13.6609C4.04561 17.14 7.86907 19.2629 11.9952 19.2629C16.1314 19.2727 19.9447 17.1302 22.0229 13.6609C20.0153 10.3096 16.2827 8.05896 11.9952 8.05896ZM11.9952 8.05896V4.73709M20.5097 11.027L23.2335 9.0221M16.8174 8.88451L18.4618 6.0737M3.48067 11.027L0.756836 9.03193M7.17298 8.89434L5.52859 6.08353M14.8401 13.6609C14.8401 15.1843 13.5689 16.4226 12.0053 16.4226C10.4416 16.4226 9.17045 15.1843 9.17045 13.6609C9.17045 12.1376 10.4416 10.8993 12.0053 10.8993C13.5689 10.8993 14.8401 12.1376 14.8401 13.6609Z\", stroke: \"#2B2B2B\", strokeWidth: 1.5, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgEye;\n","import * as React from \"react\";\nconst SvgEyeClose = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M17.11 18.12C19.13 17.16 20.85 15.62 22.02 13.67C20.01 10.32 16.28 8.07 11.99 8.07M11.99 8.07C11.09 8.07 10.21 8.17 9.35 8.36M11.99 8.07V4.75M20.5 11.03L23.22 9.03M16.81 8.89L18.45 6.08M3.47 11.03L0.75 9.03M11.3096 10.99C11.5296 10.94 11.7596 10.91 11.9996 10.91C13.5596 10.91 14.8296 12.15 14.8296 13.67C14.8296 14.05 14.7496 14.41 14.6096 14.74M11.9999 16.43C10.4399 16.43 9.16992 15.19 9.16992 13.67C9.16992 13.37 9.21992 13.09 9.30992 12.83M6.13996 9.60001C4.43996 10.57 2.98996 11.96 1.95996 13.67C4.03996 17.15 7.85996 19.27 11.99 19.27C12.57 19.27 13.15 19.23 13.71 19.14M20.4404 22.5L4.44043 2.5\", stroke: \"#2B2B2B\", strokeWidth: 1.5, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgEyeClose;\n","import { FunctionComponent } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport { classes } from '@adobe/elsie/lib';\nimport { Eye, EyeClose } from '@/auth/icons';\nimport { Locker } from '@adobe/elsie/icons';\nimport { Field, Input } from '@adobe/elsie/components';\nimport { useText } from '@adobe/elsie/i18n';\nimport '@/auth/components/UI/PasswordField/PasswordField.css';\n\nexport interface PasswordFieldProps {\n  initialPassword?: string;\n  id?: string;\n  isError?: boolean;\n  className?: string;\n  name?: string;\n  children?: any;\n  required?: boolean;\n  setPasswordValueCallback?: (value: string) => void;\n  onBlur?: (event: Event) => void;\n}\n\n// TODO: Consider moving this component to the StorefrontSDK repository following the migration to Adobe's git.corp\nexport const PasswordField: FunctionComponent<PasswordFieldProps> = ({\n  initialPassword = '',\n  required,\n  isError,\n  children,\n  name,\n  className,\n  setPasswordValueCallback,\n  onBlur,\n}) => {\n  const translations = useText({\n    requiredFieldError: 'Auth.FormText.requiredFieldError',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = useCallback(() => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  }, []);\n\n  const getErrorMessage = () => {\n    if (isError && !initialPassword.length)\n      return translations.requiredFieldError;\n\n    return '';\n  };\n\n  const errorMessage = getErrorMessage();\n  const errorClass = isError ? 'auth-password-field--error' : '';\n\n  return (\n    <div className={classes(['auth-password-field', className, errorClass])}>\n      <Field error={errorMessage}>\n        <Input\n          name={name || 'password'}\n          type={!showPassword ? 'password' : 'text'}\n          placeholder={'Password'}\n          floatingLabel={'Password'}\n          aria-label={'Password'}\n          aria-required={true}\n          required={required || false}\n          value={initialPassword}\n          onValue={setPasswordValueCallback}\n          icon={<Locker />}\n          onBlur={onBlur}\n          data-testid=\"passwordInput\"\n        />\n      </Field>\n      <div\n        data-testid=\"toggle-password-icon\"\n        className={`auth-password-field__eye-icon auth-password-field__eye-icon--${\n          showPassword ? 'show' : 'hide'\n        }`}\n        onClick={toggleShowPassword}\n      >\n        {!showPassword ? <EyeClose /> : <Eye />}\n      </div>\n      {children}\n    </div>\n  );\n};\n"],"names":["SvgLocker","props","React","SvgEye","SvgEyeClose","PasswordField","initialPassword","required","isError","children","name","className","setPasswordValueCallback","onBlur","translations","useText","requiredFieldError","showPassword","setShowPassword","useState","toggleShowPassword","useCallback","prevShowPassword","errorMessage","length","_jsxs","classes","_jsx","Field","error","Input","type","placeholder","floatingLabel","value","onValue","icon","Locker","onClick","Eye","EyeClose"],"mappings":"mWACA,MAAMA,EAAaC,GAA0BC,EAAM,cAAc,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,GAAyBC,EAAM,cAAc,IAAK,CAAE,SAAU,wBAA0B,EAAkBA,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,EAAG,gJAAiJ,OAAQ,eAAgB,cAAe,QAAS,eAAgB,OAAS,CAAA,EAAmBA,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,EAAG,wEAAyE,OAAQ,eAAgB,cAAe,QAAS,eAAgB,OAAS,CAAA,CAAC,EAAmBA,EAAM,cAAc,OAAQ,KAAsBA,EAAM,cAAc,WAAY,CAAE,GAAI,kBAAoB,EAAkBA,EAAM,cAAc,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,KAAM,QAAS,UAAW,sBAAsB,CAAE,CAAC,CAAC,CAAC,ECA1hCC,EAAUF,GAA0BC,EAAM,cAAc,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAO,EAAkBC,EAAM,cAAc,OAAQ,CAAE,EAAG,wjBAAyjB,OAAQ,UAAW,YAAa,IAAK,cAAe,QAAS,eAAgB,OAAO,CAAE,CAAC,ECA92BE,EAAeH,GAA0BC,EAAM,cAAc,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAO,EAAkBC,EAAM,cAAc,OAAQ,CAAE,EAAG,8lBAA+lB,OAAQ,UAAW,YAAa,IAAK,cAAe,QAAS,eAAgB,OAAO,CAAE,CAAC,ECqBl5BG,EAAuDA,CAAC,CACnEC,gBAAAA,EAAkB,GAClBC,SAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,KAAAA,EACAC,UAAAA,EACAC,yBAAAA,EACAC,OAAAA,CACF,IAAM,CACJ,MAAMC,EAAeC,EAAQ,CAC3BC,mBAAoB,kCAAA,CACrB,EACK,CAACC,EAAcC,CAAe,EAAIC,EAAS,EAAK,EAEhDC,EAAqBC,EAAY,IAAM,CAC1BC,EAAAA,GAAqB,CAACA,CAAgB,CACzD,EAAG,CAAE,CAAA,EASCC,EANAf,GAAW,CAACF,EAAgBkB,OACvBV,EAAaE,mBAEf,GAMT,OACES,EAAA,MAAA,CAAKd,UAAWe,EAAQ,CAAC,sBAAuBf,EAH/BH,EAAU,6BAA+B,EAGW,CAAC,EAAEC,SAAA,CACtEkB,EAACC,EAAK,CAACC,MAAON,EAAad,SACzBkB,EAACG,EAAK,CACJpB,KAAMA,GAAQ,WACdqB,KAAOd,EAA4B,OAAb,WACtBe,YAAa,WACbC,cAAe,WACf,aAAY,WACZ,gBAAe,GACf1B,SAAUA,GAAY,GACtB2B,MAAO5B,EACP6B,QAASvB,EACTwB,KAAMT,EAACU,IAAQ,EACfxB,OAAAA,EACA,cAAY,eAAA,CACb,CAAA,CACI,EACPc,EAAA,MAAA,CACE,cAAY,uBACZhB,UAAW,gEACTM,EAAe,OAAS,MAAM,GAEhCqB,QAASlB,EAAmBX,SAE1BQ,EAA8BU,EAACY,EAAK,EAAA,EAArBZ,EAACa,EAAQ,CAAA,CAAE,CACzB,CAAA,EACJ/B,CAAQ,CAAA,CACN,CAET","x_google_ignoreList":[0]}