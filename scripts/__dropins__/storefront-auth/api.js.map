{"version":3,"file":"api.js","sources":["../src/data/transforms/transform-revoke-customer-token.ts","../src/api/revokeCustomerToken/graphql/revokeCustomerToken.graphql.ts","../src/api/revokeCustomerToken/revokeCustomerToken.ts"],"sourcesContent":["import { RevokeCustomerTokenResponse } from '@/auth/types/api/revokeCustomerToken.types';\nimport { RevokeCustomerTokenModel } from '../models';\n\nexport const transformRevokeCustomerToken = (\n  response: RevokeCustomerTokenResponse\n): RevokeCustomerTokenModel => {\n  let message: string = '';\n\n  if (response?.errors?.length)\n    message =\n      (response?.errors[0]?.message as unknown as string) || 'Unknown error';\n\n  return {\n    message,\n    success: Boolean(response?.data?.revokeCustomerToken),\n  };\n};\n","export const REVOKE_CUSTOMER_TOKEN = `\n  mutation REVOKE_CUSTOMER_TOKEN {\n    revokeCustomerToken {\n      result\n    }\n  }\n`;\n","import { RevokeCustomerTokenModel } from '@/auth/data/models';\nimport { fetchGraphQl } from '../fetch-graphql';\nimport { REVOKE_CUSTOMER_TOKEN } from './graphql/revokeCustomerToken.graphql';\nimport { handleNetworkError } from '@/auth/lib/network-error';\nimport { transformRevokeCustomerToken } from '@/auth/data/transforms';\nimport { RevokeCustomerTokenResponse } from '@/auth/types/api/revokeCustomerToken.types';\nimport { deleteCookie } from '@/auth/lib/cookieUtils';\nimport { events } from '@adobe/event-bus';\nimport { COOKIE_NAMES } from '@/auth/configs/cookieConfigs';\nimport { EventsList, publishEvents } from '@/auth/lib/acdl';\n\nexport const revokeCustomerToken =\n  async (): Promise<RevokeCustomerTokenModel> => {\n    return await fetchGraphQl(REVOKE_CUSTOMER_TOKEN, {\n      method: 'POST',\n    })\n      .then((response: RevokeCustomerTokenResponse) => {\n        const transformData = transformRevokeCustomerToken(response);\n\n        if (transformData?.success) {\n          [\n            COOKIE_NAMES.auth_dropin_user_token,\n            COOKIE_NAMES.auth_dropin_firstname,\n          ].forEach((name) => {\n            deleteCookie(name);\n          });\n\n          events.emit('authenticated', false);\n\n          publishEvents(EventsList.SIGN_OUT, { logoutAttempt: true });\n        } else {\n          const errorMessage = `\n          ERROR revokeCustomerToken: ${transformData.message}`;\n          console.error(errorMessage);\n        }\n\n        return transformData;\n      })\n      .catch(handleNetworkError);\n  };\n"],"names":["transformRevokeCustomerToken","response","message","errors","length","success","Boolean","data","revokeCustomerToken","REVOKE_CUSTOMER_TOKEN","fetchGraphQl","method","then","transformData","COOKIE_NAMES","auth_dropin_user_token","auth_dropin_firstname","forEach","name","deleteCookie","emit","publishEvents","EventsList","SIGN_OUT","logoutAttempt","errorMessage","console","error","catch","handleNetworkError"],"mappings":"4uBAGaA,MAAAA,EACXC,GAC6B,WAC7B,IAAIC,EAAkB,GAEtB,OAAID,EAAAA,GAAAA,YAAAA,EAAUE,SAAVF,MAAAA,EAAkBG,SACpBF,IACGD,EAAAA,GAAAA,YAAAA,EAAUE,OAAO,KAAjBF,YAAAA,EAAqBC,UAAiC,iBAEpD,CACLA,QAAAA,EACAG,QAASC,IAAQL,EAAAA,GAAAA,YAAAA,EAAUM,OAAVN,MAAAA,EAAgBO,oBAAmB,CAExD,EChBaC,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECWxBD,EACX,SACS,MAAME,EAAaD,EAAuB,CAC/CE,OAAQ,MAAA,CACT,EACEC,KAAMX,GAA0C,CACzCY,MAAAA,EAAgBb,EAA6BC,CAAQ,EAE3D,GAAIY,GAAAA,MAAAA,EAAeR,QACjB,CACES,EAAaC,uBACbD,EAAaE,qBAAqB,EAClCC,QAAkBC,GAAA,CAClBC,EAAaD,CAAI,CAAA,CAClB,EAEME,EAAAA,KAAK,gBAAiB,EAAK,EAElCC,EAAcC,EAAWC,SAAU,CAAEC,cAAe,EAAA,CAAM,MACrD,CACL,MAAMC,EAAe;AAAA,uCACQZ,EAAcX,OAAO,GAClDwB,QAAQC,MAAMF,CAAY,CAC5B,CAEOZ,OAAAA,CAAAA,CACR,EACAe,MAAMC,CAAkB"}