{"version":3,"file":"BillToShippingAddress2.js","sources":["../../src/components/BillToShippingAddress/BillToShippingAddress.tsx","../../src/components/BillToShippingAddress/BillToShippingAddressSkeleton.tsx","../../src/containers/BillToShippingAddress/constants.ts","../../src/containers/BillToShippingAddress/BillToShippingAddress.tsx"],"sourcesContent":["import { FunctionComponent } from 'preact';\nimport { classes } from '@adobe/elsie/lib';\nimport { Checkbox, CheckboxProps } from '@adobe/elsie/components';\nimport { BillToShippingAddressSkeleton } from '@/checkout/components/BillToShippingAddress';\nimport '@/checkout/components/BillToShippingAddress/BillToShippingAddress.css';\nimport { useText } from '@adobe/elsie/i18n';\n\nexport interface BillToShippingAddressProps\n  extends Omit<CheckboxProps, 'name' | 'label'> {\n  isInitialized?: boolean;\n}\n\nexport const BillToShippingAddress: FunctionComponent<\n  BillToShippingAddressProps\n> = ({ className, isInitialized = true, checked = true, ...props }) => {\n  const translations = useText({\n    title: 'Checkout.BillToShippingAddress.title',\n  });\n\n  if (!isInitialized) return <BillToShippingAddressSkeleton />;\n\n  return (\n    <div className={classes(['checkout-bill-to-shipping-address', className])}>\n      <Checkbox\n        data-testid=\"bill-to-shipping-checkbox\"\n        className=\"checkout-bill-to-shipping-address__checkbox\"\n        checked={checked}\n        name=\"checkout-bill-to-shipping-address__checkbox\"\n        label={translations.title}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const BillToShippingAddressSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton className=\"bill-to-shipping-address__skeleton\">\n      <SkeletonRow variant=\"row\" size=\"small\" />\n    </Skeleton>\n  );\n};\n","export const BILL_TO_SHIPPING_KEY = 'is_bill_to_shipping_address';\n","import { setBillingAddress } from '@/checkout/api';\nimport { BillToShippingAddress as BillToShippingAddressComponent } from '@/checkout/components/BillToShippingAddress';\nimport {\n  IsBillToShipping,\n  cartSignal,\n  isBillToShippingSignal,\n} from '@/checkout/signals';\nimport { Container } from '@adobe/elsie/lib';\nimport { Signal } from '@preact/signals-core';\nimport { useEffect, useState } from 'preact/compat';\nimport { BILL_TO_SHIPPING_KEY } from './constants';\nimport { useAddressFormFields } from '@/checkout/context/address-form-fields';\nimport { CheckboxProps } from '@adobe/elsie/components';\nimport {\n  ShippingAddress,\n  BillingAddress,\n} from '@/checkout/data/models/address';\nimport { AddressFormField } from '@/checkout/data/models/address-form-fields';\n\ntype Address = BillingAddress | ShippingAddress[];\n\nfunction compareFields(first: Address, second: Address, field: keyof Address) {\n  const firstValue = first[field];\n  const secondValue = second[field];\n\n  if (firstValue === undefined && secondValue === undefined) return true;\n  if (firstValue === null && secondValue === null) return true;\n\n  if (typeof firstValue === 'object' && typeof secondValue === 'object') {\n    return JSON.stringify(firstValue) === JSON.stringify(secondValue);\n  }\n\n  return firstValue === secondValue;\n}\n\nexport function compareAddresses(\n  addressFormFields: AddressFormField[],\n  first: BillingAddress | undefined,\n  second: ShippingAddress | undefined\n) {\n  if (!first && !second) return true;\n  if (!first || !second) return false;\n\n  return addressFormFields.every((field) => {\n    const fieldCode = field.code as keyof Address;\n    return compareFields(first, second, fieldCode);\n  });\n}\n\nconst useInitialState = ({\n  isBillToShipping,\n}: {\n  isBillToShipping: Signal<IsBillToShipping>;\n}) => {\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const { fields } = useAddressFormFields();\n\n  const cart = cartSignal.value.data;\n  const cartId = cart?.id || '';\n  const hasCart = !!cart;\n  const billingAddress = cart?.billingAddress;\n  const shippingAddress = cart?.shippingAddresses?.[0];\n  const hasShippingAddress = Boolean(shippingAddress);\n\n  // Sync state with local storage\n  useEffect(() => {\n    if (isInitialized) return;\n\n    const localBillToShipping = localStorage.getItem(BILL_TO_SHIPPING_KEY);\n    if (!localBillToShipping) return;\n\n    setIsInitialized(true);\n\n    isBillToShipping.value = {\n      checked: localBillToShipping === 'true',\n      setByUser: false,\n    };\n  }, [isInitialized, isBillToShipping]);\n\n  // Sync state with the cart\n  useEffect(() => {\n    if (isInitialized || !fields || !hasCart) return;\n\n    setIsInitialized(true);\n\n    const checked = compareAddresses(fields, billingAddress, shippingAddress);\n\n    isBillToShipping.value = {\n      checked: billingAddress ? checked : isBillToShipping.value.checked,\n      setByUser: false,\n    };\n  }, [\n    billingAddress,\n    fields,\n    hasCart,\n    isBillToShipping,\n    isInitialized,\n    shippingAddress,\n  ]);\n\n  return { cartId, isInitialized, hasShippingAddress };\n};\n\nexport interface BillToShippingAddressProps\n  extends Omit<CheckboxProps, 'name' | 'label'> {}\n\nexport const BillToShippingAddress: Container<BillToShippingAddressProps> = ({\n  children,\n  ...props\n}) => {\n  const isBillToShipping = isBillToShippingSignal.value.checked;\n\n  const { cartId, hasShippingAddress, isInitialized } = useInitialState({\n    isBillToShipping: isBillToShippingSignal,\n  });\n\n  const onChangeHandler = (event: Event) => {\n    const checkbox = event.target as HTMLInputElement;\n    const isChecked = checkbox.checked;\n\n    isBillToShippingSignal.value = { checked: isChecked, setByUser: true };\n    localStorage.setItem(BILL_TO_SHIPPING_KEY, isChecked.toString());\n\n    if (!isInitialized || !isChecked || !hasShippingAddress) return;\n\n    const controller = new AbortController();\n\n    setBillingAddress({\n      signal: controller.signal,\n      cartId,\n      input: { same_as_shipping: true },\n    }).catch((error) => {\n      console.error(error);\n    });\n\n    return () => {\n      controller.abort();\n    };\n  };\n\n  return (\n    <BillToShippingAddressComponent\n      {...props}\n      checked={isBillToShipping}\n      isInitialized={isInitialized}\n      onChange={onChangeHandler}\n      disabled={cartSignal.value.pending}\n    />\n  );\n};\n"],"names":["BillToShippingAddress","className","isInitialized","checked","props","translations","useText","title","_jsx","classes","children","Checkbox","name","label","BillToShippingAddressSkeleton","Skeleton","SkeletonRow","variant","size","BILL_TO_SHIPPING_KEY","compareFields","first","second","field","firstValue","secondValue","undefined","JSON","stringify","compareAddresses","addressFormFields","every","fieldCode","code","useInitialState","isBillToShipping","setIsInitialized","useState","fields","useAddressFormFields","cart","cartSignal","value","data","cartId","id","hasCart","billingAddress","shippingAddress","shippingAddresses","hasShippingAddress","Boolean","useEffect","localBillToShipping","localStorage","getItem","setByUser","isBillToShippingSignal","BillToShippingAddressComponent","onChange","event","isChecked","target","setItem","toString","controller","AbortController","setBillingAddress","signal","input","same_as_shipping","catch","error","console","abort","disabled","pending"],"mappings":"qeAYO,MAAMA,EAETA,CAAC,CAAEC,UAAAA,EAAWC,cAAAA,EAAgB,GAAMC,QAAAA,EAAU,GAAM,GAAGC,CAAM,IAAM,CACrE,MAAMC,EAAeC,EAAQ,CAC3BC,MAAO,sCAAA,CACR,EAED,OAAKL,EAGHM,EAAA,MAAA,CAAKP,UAAWQ,EAAQ,CAAC,oCAAqCR,CAAS,CAAC,EAAES,SACxEF,EAACG,EAAQ,CACP,cAAY,4BACZV,UAAU,8CACVE,QAAAA,EACAS,KAAK,8CACLC,MAAOR,EAAaE,MAAM,GACtBH,CAAAA,CACL,CAAA,CACE,EAZoBI,EAACM,IAA+B,CAc7D,EC9BaA,EAAmDA,IAE5DN,EAACO,EAAQ,CAACd,UAAU,qCAAoCS,SACtDF,EAACQ,EAAW,CAACC,QAAQ,MAAMC,KAAK,OAAA,CAAS,CAAA,CACjC,ECPDC,EAAuB,8BCqBpC,SAASC,EAAcC,EAAgBC,EAAiBC,EAAsB,CACtEC,MAAAA,EAAaH,EAAME,CAAK,EACxBE,EAAcH,EAAOC,CAAK,EAG5BC,OADAA,IAAeE,QAAaD,IAAgBC,QAC5CF,IAAe,MAAQC,IAAgB,KAAa,GAEpD,OAAOD,GAAe,UAAY,OAAOC,GAAgB,SACpDE,KAAKC,UAAUJ,CAAU,IAAMG,KAAKC,UAAUH,CAAW,EAG3DD,IAAeC,CACxB,CAEgBI,SAAAA,EACdC,EACAT,EACAC,EACA,CACI,MAAA,CAACD,GAAS,CAACC,EAAe,GAC1B,CAACD,GAAS,CAACC,EAAe,GAEvBQ,EAAkBC,MAAiBR,GAAA,CACxC,MAAMS,EAAYT,EAAMU,KACjBb,OAAAA,EAAcC,EAAOC,EAAQU,CAAS,CAAA,CAC9C,CACH,CAEA,MAAME,EAAkBA,CAAC,CACvBC,iBAAAA,CAGF,IAAM,OACJ,KAAM,CAACjC,EAAekC,CAAgB,EAAIC,EAAS,EAAK,EAElD,CAAEC,OAAAA,GAAWC,EAAqB,EAElCC,EAAOC,EAAWC,MAAMC,KACxBC,GAASJ,GAAAA,YAAAA,EAAMK,KAAM,GACrBC,EAAU,CAAC,CAACN,EACZO,EAAiBP,GAAAA,YAAAA,EAAMO,eACvBC,GAAkBR,EAAAA,GAAAA,YAAAA,EAAMS,oBAANT,YAAAA,EAA0B,GAC5CU,EAAqBC,EAAQH,EAGnCI,OAAAA,EAAU,IAAM,CACVlD,GAAAA,EAAe,OAEbmD,MAAAA,EAAsBC,aAAaC,QAAQpC,CAAoB,EAChEkC,IAELjB,EAAiB,EAAI,EAErBD,EAAiBO,MAAQ,CACvBvC,QAASkD,IAAwB,OACjCG,UAAW,EAAA,EACb,EACC,CAACtD,EAAeiC,CAAgB,CAAC,EAGpCiB,EAAU,IAAM,CACVlD,GAAAA,GAAiB,CAACoC,GAAU,CAACQ,EAAS,OAE1CV,EAAiB,EAAI,EAErB,MAAMjC,EAAU0B,EAAiBS,EAAQS,EAAgBC,CAAe,EAExEb,EAAiBO,MAAQ,CACvBvC,QAAS4C,EAAiB5C,EAAUgC,EAAiBO,MAAMvC,QAC3DqD,UAAW,EAAA,CACb,EACC,CACDT,EACAT,EACAQ,EACAX,EACAjC,EACA8C,CAAe,CAChB,EAEM,CAAEJ,OAAAA,EAAQ1C,cAAAA,EAAegD,mBAAAA,CAAAA,CAClC,EAKalD,EAA+DA,CAAC,CAC3EU,SAAAA,EACA,GAAGN,CACL,IAAM,CACE+B,MAAAA,EAAmBsB,EAAuBf,MAAMvC,QAEhD,CAAEyC,OAAAA,EAAQM,mBAAAA,EAAoBhD,cAAAA,GAAkBgC,EAAgB,CACpEC,iBAAkBsB,CAAAA,CACnB,EA0BD,OACEjD,EAACkD,EAA8B,CAAA,GACzBtD,EACJD,QAASgC,EACTjC,cAAAA,EACAyD,SA7BqBC,GAAiB,CAExC,MAAMC,EADWD,EAAME,OACI3D,QAK3B,GAHAsD,EAAuBf,MAAQ,CAAEvC,QAAS0D,EAAWL,UAAW,EAAA,EAChEF,aAAaS,QAAQ5C,EAAsB0C,EAAUG,SAAU,CAAA,EAE3D,CAAC9D,GAAiB,CAAC2D,GAAa,CAACX,EAAoB,OAEnDe,MAAAA,EAAa,IAAIC,gBAEL,OAAAC,EAAA,CAChBC,OAAQH,EAAWG,OACnBxB,OAAAA,EACAyB,MAAO,CAAEC,iBAAkB,EAAK,CAAA,CACjC,EAAEC,MAAiBC,GAAA,CAClBC,QAAQD,MAAMA,CAAK,CAAA,CACpB,EAEM,IAAM,CACXP,EAAWS,MAAM,CAAA,CACnB,EASEC,SAAUlC,EAAWC,MAAMkC,OAAAA,CAC5B,CAEL"}