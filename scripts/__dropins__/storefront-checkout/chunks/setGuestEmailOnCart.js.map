{"version":3,"file":"setGuestEmailOnCart.js","sources":["../../src/data/transforms/transform-email-availability.ts","../../src/api/isEmailAvailable/graphql/isEmailAvailable.graphql.ts","../../src/api/isEmailAvailable/isEmailAvailable.ts","../../src/api/setGuestEmailOnCart/graphql/setGuestEmailOnCart.graphql.ts","../../src/api/setGuestEmailOnCart/setGuestEmailOnCart.ts"],"sourcesContent":["import { IsEmailAvailableQuery } from '@/checkout/__generated__/types';\nimport { EmailAvailability } from '@/checkout/data/models';\n\nconst transformEmailAvailability = (\n  data: IsEmailAvailableQuery['isEmailAvailable']\n): EmailAvailability => {\n  return Boolean(data?.is_email_available);\n};\n\nexport { transformEmailAvailability };\n","export const isEmailAvailableQuery = /* GraphQL */`\n  query isEmailAvailable($email: String!) {\n    isEmailAvailable(email: $email) {\n      is_email_available\n    }\n  }\n`;\n","import { IsEmailAvailableQuery } from '@/checkout/__generated__/types';\nimport { fetchGraphQl } from '@/checkout/api';\nimport { MissingEmail } from '@/checkout/api/errors';\nimport { isEmailAvailableQuery } from '@/checkout/api/isEmailAvailable/graphql/isEmailAvailable.graphql';\nimport { EmailAvailability } from '@/checkout/data/models/email-availability';\nimport { transformEmailAvailability } from '@/checkout/data/transforms/transform-email-availability';\nimport { handleFetchErrors } from '@/checkout/lib/fetch-error';\nimport { handleNetworkError } from '@/checkout/lib/network-error';\n\nexport const isEmailAvailable = async (\n  email: string\n): Promise<EmailAvailability> => {\n  if (!email) throw new MissingEmail();\n\n  const { data, errors } = await fetchGraphQl<IsEmailAvailableQuery>(\n    isEmailAvailableQuery,\n    {\n      method: 'GET',\n      cache: 'no-cache',\n      variables: { email },\n    }\n  ).catch(handleNetworkError);\n\n  if (errors) handleFetchErrors(errors);\n\n  return transformEmailAvailability(data.isEmailAvailable);\n};\n","import {\n  CART_DATA_FRAGMENT,\n  CART_SUMMARY_FRAGMENT,\n} from '@/checkout/api/getCart/graphql/getCart.graphql';\n\nexport const setGuestEmailMutation = /* GraphQL */ `\n  mutation setGuestEmail($cartId: String!, $email: String!) {\n    setGuestEmailOnCart(input: { cart_id: $cartId, email: $email }) {\n      cart {\n        id\n        ...CartData\n        ...CartSummaryItems\n      }\n    }\n  }\n  ${CART_DATA_FRAGMENT}\n  ${CART_SUMMARY_FRAGMENT}\n`;\n","import { MissingCart } from '@/checkout/api/errors';\nimport { setGuestEmailMutation } from '@/checkout/api/setGuestEmailOnCart/graphql/setGuestEmailOnCart.graphql';\nimport { dispatchApiCall } from '@/checkout/api/utils/dispatchApiCall';\nimport { transformCart } from '@/checkout/data/transforms/index';\n\nexport type SetGuestEmailOnCartInput = {\n  cartId: string;\n  email: string;\n};\n\nexport const setGuestEmailOnCart = async ({\n  cartId,\n  email,\n}: SetGuestEmailOnCartInput) => {\n  if (!cartId) throw new MissingCart();\n\n  return await dispatchApiCall({\n    type: 'mutation',\n    query: setGuestEmailMutation,\n    options: { variables: { cartId, email } },\n    path: 'setGuestEmailOnCart.cart',\n    signalType: 'cart',\n    transformer: transformCart,\n  });\n};\n"],"names":["transformEmailAvailability","data","Boolean","is_email_available","isEmailAvailableQuery","isEmailAvailable","email","MissingEmail","errors","fetchGraphQl","method","cache","variables","catch","handleNetworkError","handleFetchErrors","setGuestEmailMutation","CART_DATA_FRAGMENT","CART_SUMMARY_FRAGMENT","setGuestEmailOnCart","cartId","MissingCart","dispatchApiCall","type","query","options","path","signalType","transformer","transformCart"],"mappings":"8MAGA,MAAMA,EACJC,GAEOC,GAAQD,GAAAA,MAAAA,EAAME,oBCNVC,EAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECSrCC,EAAmB,MAC9BC,GAC+B,CAC/B,GAAI,CAACA,EAAO,MAAM,IAAIC,EAEhB,KAAA,CAAEN,KAAAA,EAAMO,OAAAA,CAAAA,EAAW,MAAMC,EAC7BL,EACA,CACEM,OAAQ,MACRC,MAAO,WACPC,UAAW,CAAEN,MAAAA,CAAM,CAAA,CAEvB,EAAEO,MAAMC,CAAkB,EAEtBN,OAAAA,GAAQO,EAAkBP,CAAM,EAE7BR,EAA2BC,EAAKI,gBAAgB,CACzD,ECrBaW,EAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAU/CC,CAAkB;AAAA,IAClBC,CAAqB;AAAA,ECNZC,EAAsB,MAAO,CACxCC,OAAAA,EACAd,MAAAA,CACwB,IAAM,CAC9B,GAAI,CAACc,EAAQ,MAAM,IAAIC,EAEvB,OAAO,MAAMC,EAAgB,CAC3BC,KAAM,WACNC,MAAOR,EACPS,QAAS,CAAEb,UAAW,CAAEQ,OAAAA,EAAQd,MAAAA,CAAM,CAAE,EACxCoB,KAAM,2BACNC,WAAY,OACZC,YAAaC,CAAAA,CACd,CACH"}