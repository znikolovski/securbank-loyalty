{"version":3,"file":"ShippingMethods.js","sources":["../../node_modules/@adobe/elsie/src/icons/Delivery.svg","../../src/components/ShippingMethods/ShippingMethods.tsx","../../src/components/ShippingMethods/ShippingMethodsSkeleton.tsx","../../src/utils/shippingMethods/isEqual.ts","../../src/containers/ShippingMethods/ShippingMethods.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgDelivery = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M2.47266 4.90002H15.1851V10.9645H21.2495L23 12.715V17.6124H20.073\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M15.1758 5.87573H19.0019L21.0394 10.7636\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M9.76151 16.7898C9.76151 18.0525 8.72845 19.076 7.46582 19.076C6.20318 19.076 5.17969 18.0429 5.17969 16.7803C5.17969 15.5176 6.20318 14.4941 7.46582 14.4941C8.72845 14.4941 9.75195 15.5176 9.76151 16.7803C9.76151 16.7803 9.76151 16.7803 9.76151 16.7898Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M19.8726 16.7898C19.8726 18.062 18.8491 19.0855 17.5769 19.0855C16.3047 19.0855 15.2812 18.062 15.2812 16.7898C15.2812 15.5176 16.3047 14.4941 17.5769 14.4941C18.8491 14.4941 19.8726 15.5176 19.8726 16.7898Z\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M8.08792 7.63574H1.69824\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M7.11229 10.3619H1\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M5.16084 13.0402H1.92773\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M9.76172 16.7611H15.2809\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M2.38672 16.7611H5.17025\", stroke: \"currentColor\", strokeWidth: 1, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgDelivery;\n","import { classes } from '@adobe/elsie/lib';\nimport '@/checkout/components/ShippingMethods/ShippingMethods.css';\nimport {\n  Divider,\n  Icon,\n  IllustratedMessage,\n  Price,\n  ProgressSpinner,\n  RadioButton,\n} from '@adobe/elsie/components';\nimport { useText } from '@adobe/elsie/i18n';\nimport { Delivery } from '@adobe/elsie/icons';\nimport { Heading } from '@/checkout/components';\nimport { ShippingMethodsSkeleton } from '@/checkout/components/ShippingMethods';\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { ShippingMethod } from '@/checkout/data/models';\n\nexport interface ShippingMethodsProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading?: boolean;\n  onSelectionChange?: (method: ShippingMethod) => void;\n  options?: ShippingMethod[];\n  selection?: ShippingMethod;\n}\n\nexport const ShippingMethods: FunctionComponent<ShippingMethodsProps> = ({\n  className,\n  isLoading = false,\n  onSelectionChange = () => {},\n  options,\n  selection,\n  ...props\n}) => {\n  const dictionary = useText({\n    Title: 'Checkout.ShippingMethods.title',\n    EmptyState: 'Checkout.ShippingMethods.emptyState',\n  });\n\n  if (options === undefined) return <ShippingMethodsSkeleton />;\n\n  return (\n    <div\n      {...props}\n      className={classes(['checkout-shipping-methods', className])}\n    >\n      <Heading level={3} className=\"checkout-shipping-methods__title\">\n        {dictionary.Title}\n      </Heading>\n\n      {!isLoading && options.length === 0 && (\n        <IllustratedMessage\n          icon={<Icon source={Delivery} />}\n          message={<p>{dictionary.EmptyState}</p>}\n        />\n      )}\n\n      <div className={classes(['checkout-shipping-methods__content'])}>\n        {isLoading && (\n          <ProgressSpinner className=\"checkout-shipping-methods__spinner\" />\n        )}\n\n        <div\n          className={classes([\n            'checkout-shipping-methods__options',\n            ['checkout-shipping-methods__options--loading', isLoading],\n          ])}\n        >\n          {options.map((method: ShippingMethod) => {\n            return (\n              <RadioButton\n                data-testid=\"shipping-method-radiobutton\"\n                aria-busy={isLoading}\n                id={method.value}\n                key={method.value}\n                name=\"shipping-method\"\n                className=\"checkout-shipping-methods__method\"\n                label={\n                  <>\n                    <Price\n                      amount={method.amount.value}\n                      currency={method.amount.currency}\n                    />\n                    &nbsp;\n                    <span>{method.carrier.title}</span>\n                  </>\n                }\n                description={method.title}\n                value={method.value}\n                checked={selection?.value === method.value}\n                onChange={() => onSelectionChange(method)}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <Divider variant=\"primary\" />\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const ShippingMethodsSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton data-testid=\"shipping-methods-skeleton\">\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow size=\"medium\" fullWidth={true} />\n      <SkeletonRow size=\"medium\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { ShippingMethod } from '@/checkout/data/models';\n\nexport const isEqual = (a: ShippingMethod, b: ShippingMethod) => {\n  return a.code === b.code && a.carrier.code === b.carrier.code;\n};\n","import {\n  estimateShippingMethods,\n  setShippingMethodsOnCart,\n} from '@/checkout/api';\nimport { ShippingMethods as ShippingMethodsList } from '@/checkout/components/ShippingMethods';\nimport { PreselectedShippingMethod } from '@/checkout/containers/Checkout';\nimport { useStore } from '@/checkout/context/store';\nimport { ShippingMethod } from '@/checkout/data/models';\nimport {\n  cartSignal,\n  estimateShippingMethodsSignal,\n  regionsSignal,\n} from '@/checkout/signals';\nimport { selectedShippingMethodSignal } from '@/checkout/signals/SelectedShippingMethodSignal';\nimport { isEqual } from '@/checkout/utils/shippingMethods';\nimport { Container } from '@adobe/elsie/lib';\nimport { HTMLAttributes, useCallback, useEffect, useMemo } from 'preact/compat';\n\nexport interface ShippingMethodsProps extends HTMLAttributes<HTMLDivElement> {\n  preSelectedMethod?: PreselectedShippingMethod;\n}\n\nfunction useShippingMethods(preselectedMethod?: PreselectedShippingMethod) {\n  const store = useStore();\n  const config = store.config;\n  const isLoadingConfig = !config;\n\n  const cart = cartSignal.value.data;\n  const isLoadingCart = cartSignal.value.pending;\n  const estimationShippingMethods = estimateShippingMethodsSignal.value.data;\n  const isLoadingEstimation = estimateShippingMethodsSignal.value.pending;\n  const localShippingSelection = selectedShippingMethodSignal.value;\n\n  const cartId = cart?.id;\n  const cartShippingAddresses = cart?.shippingAddresses;\n  const primaryAddress = cartShippingAddresses?.[0];\n  const isAbleToSetShippingMethod = !!primaryAddress;\n  const cartShippingMethods = primaryAddress?.availableShippingMethods;\n  const cartShippingSelection = primaryAddress?.selectedShippingMethod;\n\n  const shippingOptions = cartShippingMethods || estimationShippingMethods;\n\n  const setShippingMethodOnCart = useCallback(\n    (method: ShippingMethod) => {\n      if (!cartId || !isAbleToSetShippingMethod) return;\n\n      const partialMethod = {\n        method_code: method.code,\n        carrier_code: method.carrier.code,\n      };\n\n      setShippingMethodsOnCart({\n        cartId,\n        shippingMethods: [partialMethod],\n      }).catch((error) => {\n        console.error('setting shipping methods on cart failed:', error);\n      });\n    },\n    [cartId, isAbleToSetShippingMethod]\n  );\n\n  const onSelectionChange = (method: ShippingMethod) => {\n    selectedShippingMethodSignal.value = method;\n  };\n\n  /**\n   * This memo is responsible for determining the selected shipping method\n   * based on the current state of the cart and the available shipping methods.\n   */\n  const selectedShippingOption: ShippingMethod | undefined = useMemo(() => {\n    if (!shippingOptions?.length) return;\n\n    const fallbackShippingOption = shippingOptions[0];\n    const selection = localShippingSelection || cartShippingSelection;\n\n    if (!selection) {\n      const preselection = shippingOptions.find((method) => {\n        return (\n          method.carrier.code === preselectedMethod?.carrierCode &&\n          method.code === preselectedMethod?.methodCode\n        );\n      });\n\n      return preselection || fallbackShippingOption;\n    }\n\n    const isAvailable = shippingOptions.some((method) =>\n      isEqual(method, selection)\n    );\n\n    return isAvailable ? selection : fallbackShippingOption;\n  }, [\n    localShippingSelection,\n    cartShippingSelection,\n    shippingOptions,\n    preselectedMethod,\n  ]);\n\n  /**\n   * This effect is responsible for syncing the local and cart state with the current selection.\n\n   * - Initialize the local selection with the data from the cart when needed.\n   * - Initialize the local selection and sync the cart when using the first available method.\n   * - If the cart gets out of sync, update the cart with the local selection.\n   */\n  useEffect(() => {\n    if (!selectedShippingOption) return;\n\n    if (\n      !localShippingSelection ||\n      !isEqual(selectedShippingOption, localShippingSelection)\n    ) {\n      selectedShippingMethodSignal.value = selectedShippingOption;\n    }\n\n    if (\n      !cartShippingSelection ||\n      !isEqual(selectedShippingOption, cartShippingSelection)\n    ) {\n      setShippingMethodOnCart(selectedShippingOption);\n    }\n  }, [\n    selectedShippingOption,\n    localShippingSelection,\n    cartShippingSelection,\n    setShippingMethodOnCart,\n  ]);\n\n  /**\n   * This effect is responsible for triggering the shipping methods estimation.\n   *\n   * - Only triggers if there is cart data and no available shipping methods.\n   * - Builds the estimate shipping search fields using the current region data or defaults.\n   * - Calls the estimateShipping function with the cartId and search fields.\n   */\n  useEffect(() => {\n    if (!cartId || cartShippingMethods) return;\n\n    const {\n      country: regionCountry,\n      selectedRegion,\n      selectedRegionId,\n    } = regionsSignal.value;\n\n    const country = regionCountry || config?.defaultCountry;\n\n    if (country) {\n      const criteria = {\n        country_code: country,\n        region_name: selectedRegion,\n        region_id: selectedRegionId,\n      };\n\n      estimateShippingMethods({ cartId, criteria }).catch((error: any) => {\n        estimateShippingMethodsSignal.value = { pending: false, data: [] };\n        console.error('shipping methods estimation failed:', error);\n      });\n    }\n  }, [cartId, cartShippingMethods, config]);\n\n  return {\n    isLoading: isLoadingCart || isLoadingConfig || isLoadingEstimation,\n    options: shippingOptions,\n    selection: selectedShippingOption,\n    onSelectionChange,\n  };\n}\n\nexport const ShippingMethods: Container<ShippingMethodsProps> = ({\n  preSelectedMethod,\n  ...props\n}) => {\n  const { isLoading, options, selection, onSelectionChange } =\n    useShippingMethods(preSelectedMethod);\n\n  return (\n    <ShippingMethodsList\n      {...props}\n      className=\"checkout-shipping-methods\"\n      isLoading={isLoading}\n      onSelectionChange={onSelectionChange}\n      options={options}\n      selection={selection}\n    />\n  );\n};\n"],"names":["SvgDelivery","props","React","ShippingMethods","className","isLoading","onSelectionChange","options","selection","dictionary","useText","Title","EmptyState","undefined","_jsx","ShippingMethodsSkeleton","_jsxs","classes","children","Heading","level","length","IllustratedMessage","icon","Icon","source","Delivery","message","ProgressSpinner","map","method","RadioButton","id","value","name","label","_Fragment","Price","amount","currency","carrier","title","description","checked","onChange","Divider","variant","Skeleton","SkeletonRow","size","fullWidth","isEqual","a","b","code","useShippingMethods","preselectedMethod","config","useStore","isLoadingConfig","cart","cartSignal","data","isLoadingCart","pending","estimationShippingMethods","estimateShippingMethodsSignal","isLoadingEstimation","localShippingSelection","selectedShippingMethodSignal","cartId","cartShippingAddresses","shippingAddresses","primaryAddress","isAbleToSetShippingMethod","cartShippingMethods","availableShippingMethods","cartShippingSelection","selectedShippingMethod","shippingOptions","setShippingMethodOnCart","useCallback","partialMethod","method_code","carrier_code","setShippingMethodsOnCart","shippingMethods","catch","error","selectedShippingOption","useMemo","fallbackShippingOption","some","find","carrierCode","methodCode","useEffect","country","regionCountry","selectedRegion","selectedRegionId","regionsSignal","defaultCountry","estimateShippingMethods","criteria","country_code","region_name","region_id","preSelectedMethod","ShippingMethodsList"],"mappings":"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","x_google_ignoreList":[0]}