var a=Object.defineProperty;var d=(n,e,i)=>e in n?a(n,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[e]=i;var r=(n,e,i)=>(d(n,typeof e!="symbol"?e+"":e,i),i);const f=Date.now().toString(36).substring(2);class l{static on(e,i,t){if(typeof BroadcastChannel>"u")return;const o=new BroadcastChannel("ElsieSDK/EventBus");if(t!=null&&t.eager){const s=this._lastEvent[e];s&&i(s.payload)}return o.addEventListener("message",({data:s})=>{this._identifier&&this._identifier!==s.identifier||s.event===e&&i(s.payload)}),window.addEventListener("beforeunload",()=>{o.close()}),{off(){o.close()}}}static emit(e,i){if(typeof BroadcastChannel>"u")return;const t=new BroadcastChannel("ElsieSDK/EventBus");t.postMessage({event:e,identifier:this._identifier,payload:i}),this._lastEvent[e]={payload:i},t.close()}static enableLogger(e){var i;typeof BroadcastChannel>"u"||((i=this._logger)==null||i.close(),this._logger=null,e!==!1&&(this._logger=new BroadcastChannel("ElsieSDK/EventBus"),this._logger.addEventListener("message",({data:t})=>{this._identifier&&this._identifier!==t.identifier||(console.group(`ðŸ“¡ Event (${t.identifier}) âž¡ ${t.event}`),console.log(t.payload),console.groupEnd())}),window.addEventListener("beforeunload",()=>{var t;(t=this._logger)==null||t.close()})))}}r(l,"_identifier",f),r(l,"_logger",null),r(l,"_lastEvent",{});export{l as events};
