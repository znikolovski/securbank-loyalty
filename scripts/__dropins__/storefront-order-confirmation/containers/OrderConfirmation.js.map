{"version":3,"file":"OrderConfirmation.js","sources":["../../src/hooks/useBreakpoint/useBreakpoint.ts","../../src/reducers/orderConfirmation.ts","../../src/components/OrderConfirmation/OrderConfirmation.tsx","../../node_modules/@adobe/elsie/src/icons/OrderSuccess.svg","../../node_modules/@adobe/elsie/src/icons/WarningFilled.svg","../../src/components/Header/Header.tsx","../../src/components/Header/HeaderSkeleton.tsx","../../src/components/OrderSearchForm/OrderSearchForm.tsx","../../src/components/Details/Details.tsx","../../src/components/Details/DetailsSkeleton.tsx","../../src/components/Footer/Footer.tsx","../../src/components/Footer/FooterSkeleton.tsx","../../src/components/StaticSkeleton/StaticSkeleton.tsx","../../src/components/OrderSummary/OrderSummary.tsx","../../src/components/OrderSummary/OrderSummarySkeleton.tsx","../../src/components/CartSummaryItem/CartSummaryItem.tsx","../../src/data/transforms/transform-order-items.ts","../../src/components/CartSummary/CartSummary.tsx","../../src/components/CartSummary/CartSummarySkeleton.tsx","../../src/data/transforms/transform-customer-address.ts","../../src/containers/OrderConfirmation/OrderConfirmation.tsx"],"sourcesContent":["import { useEffect, useState } from 'preact/hooks';\n\nexport const useBreakpoint = () => {\n  const getBreakpoint = () => {\n    if (window.innerWidth >= 1920) return 'xxlarge';\n    if (window.innerWidth >= 1366) return 'xlarge';\n    if (window.innerWidth >= 1024) return 'large';\n    if (window.innerWidth >= 768) return 'medium';\n\n    return 'small';\n  };\n\n  const [breakpoint, setBreakpoint] = useState<\n    ReturnType<typeof getBreakpoint>\n  >(getBreakpoint());\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    const handleResize = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setBreakpoint(getBreakpoint()), 50);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, []);\n\n  return breakpoint;\n};\n","import {\n  GuestOrderByTokenQuery,\n  GuestOrderQuery,\n} from '@/order-confirmation/__generated__/types';\n\nexport enum Actions {\n  ADD_ORDER_REFERENCE = 'ADD_ORDER_REFERENCE',\n  LOADING = 'LOADING',\n  SET_DETAILS = 'SET_DETAILS',\n  ALERT = 'ALERT',\n  DISMISS_ALERT = 'DISMISS_ALERT',\n}\n\nexport type OrderDetails =\n  | GuestOrderQuery['guestOrder']\n  | GuestOrderByTokenQuery['guestOrderByToken'];\n\ninterface LoadingAction {\n  type: Actions.LOADING;\n}\n\ninterface SetDetailsAction {\n  type: Actions.SET_DETAILS;\n  details: OrderDetails | null;\n  alert?: Alert;\n  fromSearchForm?: boolean;\n}\n\nexport enum AlertType {\n  ERROR = 'error',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n}\n\nexport enum AlertCode {\n  INVALID_ORDER = 'invalid_order',\n  INVALID_SEARCH = 'invalid_search',\n  UNKNOWN = 'unknown_error',\n}\n\nexport type Alert = {\n  type: AlertType;\n  code: AlertCode;\n  message: string;\n};\n\ninterface AlertAction {\n  type: Actions.ALERT;\n  alert: Alert;\n}\n\ninterface DismissAlertAction {\n  type: Actions.DISMISS_ALERT;\n}\n\nexport interface State {\n  isLoading: boolean;\n  details: OrderDetails | null;\n  orderRef?: string;\n  alert?: Alert;\n  isOrderFromSearchForm: boolean;\n}\n\ntype Action =\n  | LoadingAction\n  | SetDetailsAction\n  | AlertAction\n  | DismissAlertAction;\n\nexport function orderConfirmationReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case Actions.LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case Actions.SET_DETAILS:\n      return {\n        ...state,\n        isLoading: false,\n        details: action.details,\n        alert: action.alert,\n        isOrderFromSearchForm: action.fromSearchForm || false,\n      };\n    case Actions.ALERT:\n      return {\n        ...state,\n        isLoading: false,\n        alert: action.alert,\n      };\n    case Actions.DISMISS_ALERT:\n      return {\n        ...state,\n        alert: undefined,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CartSummary,\n  Details,\n  Footer,\n  Header,\n  OrderSearchFields,\n  OrderSearchForm,\n  OrderSummary,\n  Summary,\n} from '@/order-confirmation/components';\nimport { useBreakpoint } from '@/order-confirmation/hooks/useBreakpoint';\nimport {\n  AlertCode,\n  State,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderConfirmation/OrderConfirmation.css';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\n\nconst ConditionalWrapper: FunctionComponent<{\n  children?: VNode;\n  className: string;\n}> = ({ children, className }) => {\n  const breakpoint = useBreakpoint();\n  return breakpoint !== 'small' ? (\n    <div className={className}>{children}</div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  state: State;\n  dismissAlert: () => void;\n  onOrderSearch: (fields: OrderSearchFields) => void;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n  onSignUpClick?: () => void;\n}\n\n// TODO types\nfunction mapDetailsToSummary(orderDetails: any): Summary | undefined {\n  const total = orderDetails?.total;\n  const isVirtual = orderDetails?.is_virtual;\n\n  if (!total) {\n    return undefined;\n  }\n\n  const grandTotal = total?.grand_total;\n  const subtotal = total?.subtotal;\n  const shipping = total?.total_shipping;\n  const tax = total?.total_tax;\n\n  return {\n    total: {\n      inclTax: {\n        amount: grandTotal?.value || 0,\n        currency: grandTotal?.currency || '',\n      },\n    },\n    subtotal: {\n      amount: subtotal?.value || 0,\n      currency: subtotal?.currency || '',\n      isTaxIncl: false,\n    },\n    shipping: {\n      amount: shipping?.value || 0,\n      currency: shipping?.currency || '',\n      isVirtual,\n    },\n    tax: {\n      amount: tax?.value || 0,\n      currency: tax?.currency || '',\n    },\n  };\n}\n\ntype AsideProps = {\n  state: State;\n};\n\nconst Aside: FunctionComponent<AsideProps> = ({ state }) => {\n  const { isLoading, details } = state;\n  const summary = mapDetailsToSummary(details);\n\n  return (\n    <>\n      <OrderSummary isLoading={isLoading} summary={summary} />\n      <CartSummary isLoading={isLoading} details={details} />\n    </>\n  );\n};\n\nconst AsideElement: FunctionComponent<AsideProps> = ({ state }) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__aside\">\n      <Aside state={state} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Main: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n  onSignUpClick,\n}) => {\n  const { details, isLoading } = state;\n\n  const billingAddress = details?.billing_address;\n  const customerName = billingAddress?.firstname || '';\n  const orderNumber = details?.number || '';\n  const orderStatus = details?.status || '';\n\n  const showCustomerHeader = !!customerName && !!orderNumber;\n\n  return (\n    <>\n      {(isLoading || (!isLoading && showCustomerHeader)) && (\n        <Header\n          isLoading={isLoading}\n          customerName={customerName}\n          orderNumber={orderNumber}\n          orderStatus={orderStatus}\n          onSignUpClick={onSignUpClick}\n        />\n      )}\n\n      <Details isLoading={isLoading} orderDetails={details} />\n\n      <Footer\n        isLoading={isLoading}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n      />\n    </>\n  );\n};\n\nconst MainElement: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n  dismissAlert,\n  onOrderSearch,\n  onSignUpClick,\n}) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__main\">\n      <Main\n        state={state}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        dismissAlert={dismissAlert}\n        onOrderSearch={onOrderSearch}\n        onSignUpClick={onSignUpClick}\n      />\n    </ConditionalWrapper>\n  );\n};\n\nexport const OrderConfirmation: FunctionComponent<OrderConfirmationProps> = ({\n  className,\n  state,\n  dismissAlert,\n  routeHome,\n  routeSupport,\n  onOrderSearch,\n  onSignUpClick,\n}) => {\n  const { details, alert, isLoading } = state;\n  const hasOrderDetails = !!details?.number;\n  const isInvalidOrder = alert && alert.code === AlertCode.INVALID_ORDER;\n  const isInvalidSearch = alert && alert.code === AlertCode.INVALID_SEARCH;\n\n  if (!isLoading && !hasOrderDetails) {\n    return (\n      <div className={classes(['order-confirmation', className])}>\n        <OrderSearchForm\n          alert={\n            isInvalidOrder || isInvalidSearch\n              ? {\n                  heading: alert.message,\n                  description: '',\n                  type: alert.type,\n                  onDismiss: dismissAlert,\n                }\n              : undefined\n          }\n          onOrderSearch={onOrderSearch}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes(['order-confirmation', className])}>\n      <MainElement\n        state={state}\n        dismissAlert={dismissAlert}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        onOrderSearch={onOrderSearch}\n        onSignUpClick={onSignUpClick}\n      />\n      <AsideElement state={state} />\n    </div>\n  );\n};\n","import * as React from \"react\";\nconst SvgOrderSuccess = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#clip0_4797_15077)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M10.15 20.85L1.5 17.53V6.63L10.15 10V20.85Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M1.5 6.63001L10.15 3.20001L18.8 6.63001L10.15 10L1.5 6.63001Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.17969 4.77002L14.8297 8.15002V11.47\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.7896 12.64V6.63L10.1396 10V20.85L14.8296 19.05\", stroke: \"currentColor\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M15.71 17.26C15.71 15.38 17.23 13.86 19.11 13.86C20.99 13.86 22.51 15.38 22.51 17.26C22.51 19.14 20.99 20.66 19.11 20.66C17.23 20.66 15.71 19.14 15.71 17.26Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M17.4805 17.49L18.5605 18.41L20.7205 16.33\", stroke: \"currentColor\", strokeLinecap: \"square\", strokeLinejoin: \"round\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"clip0_4797_15077\" }, /* @__PURE__ */ React.createElement(\"rect\", { width: 22, height: 18.65, fill: \"white\", transform: \"translate(1 2.70001)\" }))));\nexport default SvgOrderSuccess;\n","import * as React from \"react\";\nconst SvgWarningFilled = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M1 20.8953L12.1922 1.5L23.395 20.8953H1ZM13.0278 13.9638L13.25 10.0377V9H11.25V10.0377L11.4722 13.9638H13.0278ZM11.2994 16V17.7509H13.2253V16H11.2994Z\", fill: \"currentColor\" }));\nexport default SvgWarningFilled;\n","import { FunctionComponent } from 'preact';\nimport { Button, Icon } from '@adobe/elsie/components';\nimport { OrderSuccess } from '@adobe/elsie/icons';\nimport { Text } from '@adobe/elsie/i18n';\nimport { HeaderSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Header/Header.css';\n\nexport interface HeaderProps {\n  isLoading: boolean;\n  customerName?: string;\n  orderNumber?: string;\n  orderStatus?: string;\n  onSignUpClick?: () => void;\n}\nexport const Header: FunctionComponent<HeaderProps> = ({\n  isLoading,\n  customerName,\n  orderNumber,\n  orderStatus,\n  onSignUpClick,\n}) => {\n  if (isLoading) {\n    return <HeaderSkeleton />;\n  }\n\n  return (\n    <div className=\"order-confirmation-header order-confirmation__card\">\n      <Icon\n        source={OrderSuccess}\n        size=\"64\"\n        className=\"order-confirmation-header__icon\"\n      />\n\n      <h1 className=\"order-confirmation-header__title\">\n        {customerName ? (\n          <Text\n            id={'OrderConfirmation.Header.title'}\n            fields={{ name: customerName }}\n          />\n        ) : (\n          <Text id={'OrderConfirmation.Header.defaultTitle'} />\n        )}\n      </h1>\n\n      {orderNumber && (\n        <p className=\"order-confirmation-header__order\">\n          <Text\n            id={'OrderConfirmation.Header.order'}\n            fields={{ order: orderNumber }}\n          />\n          {orderStatus !== undefined && orderStatus !== '' && (\n            <span className=\"order-confirmation-header__status\">\n              {' '}\n              ({orderStatus})\n            </span>\n          )}\n        </p>\n      )}\n\n      {onSignUpClick && (\n        <div className=\"order-confirmation-create-account\">\n          <p className=\"order-confirmation-create-account__message\">\n            <Text id={'OrderConfirmation.Header.CreateAccount.message'} />\n          </p>\n          <Button\n            data-testid=\"create-account-button\"\n            className=\"order-confirmation-create-account__button\"\n            size=\"medium\"\n            variant=\"secondary\"\n            type=\"submit\"\n            onClick={onSignUpClick}\n          >\n            <Text id={'OrderConfirmation.Header.CreateAccount.button'} />\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const HeaderSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-header-skeleton\"\n      className={'order-confirmation-header'}\n    >\n      <SkeletonRow variant={'empty'} size=\"xlarge\" fullWidth={true} />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import {\n  Button,\n  Card,\n  Field,\n  Icon,\n  InLineAlert,\n  Input,\n} from '@adobe/elsie/components';\nimport { InLineAlertProps } from '@adobe/elsie/components/InLineAlert/InLineAlert';\nimport { Text, useText } from '@adobe/elsie/i18n';\nimport { WarningFilled } from '@adobe/elsie/icons';\nimport { getFormValues } from '@adobe/elsie/lib';\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/OrderSearchForm/OrderSearchForm.css';\n\nexport interface OrderSearchFields {\n  email: string;\n  number: string;\n  postcode?: string;\n}\n\nexport interface OrderSearchFormProps extends HTMLAttributes<HTMLDivElement> {\n  alert?: InLineAlertProps;\n  onOrderSearch?: (fields: OrderSearchFields) => void;\n}\n\nexport const OrderSearchForm: FunctionComponent<OrderSearchFormProps> = ({\n  alert,\n  onOrderSearch,\n}) => {\n  const translations = useText({\n    email: 'OrderConfirmation.OrderSearchForm.email',\n    postcode: 'OrderConfirmation.OrderSearchForm.postcode',\n    number: 'OrderConfirmation.OrderSearchForm.orderNumber',\n  });\n\n  const handleSubmit = (event: Event) => {\n    event.preventDefault();\n    const formValues = getFormValues(event.target as HTMLFormElement);\n    onOrderSearch?.(formValues as OrderSearchFields);\n  };\n\n  return (\n    <Card\n      variant={'secondary'}\n      className={\n        'order-confirmation-order-search-form order-confirmation__card'\n      }\n    >\n      <h2 className={'order-confirmation-order-search-form__title'}>\n        <Text id={'OrderConfirmation.OrderSearchForm.title'} />\n      </h2>\n\n      <p>\n        <Text id={'OrderConfirmation.OrderSearchForm.description'} />\n      </p>\n\n      {alert && (\n        <InLineAlert\n          className={'order-confirmation-order-search-form__alert'}\n          data-testid=\"order-confirmation-alert\"\n          icon={<Icon source={WarningFilled} />}\n          {...alert}\n        />\n      )}\n\n      <form\n        className={'order-confirmation-order-search-form__fields'}\n        onSubmit={handleSubmit}\n      >\n        <div className={'order-confirmation-order-search-form__fields-columns'}>\n          <Field>\n            <Input\n              id=\"order-email\"\n              name=\"email\"\n              type={'email'}\n              autocomplete={'email'}\n              placeholder={translations.email}\n              floatingLabel={translations.email}\n              required={true}\n              aria-label={translations.email}\n              aria-required={true}\n            />\n          </Field>\n\n          <Field>\n            <Input\n              id=\"postcode\"\n              name=\"postcode\"\n              type={'text'}\n              autocomplete={'postal-code'}\n              placeholder={translations.postcode}\n              floatingLabel={translations.postcode}\n              required={false}\n              aria-label={translations.postcode}\n              aria-required={true}\n            />\n          </Field>\n        </div>\n\n        <Field>\n          <Input\n            id=\"order-number\"\n            name=\"number\"\n            type={'text'}\n            placeholder={translations.number}\n            floatingLabel={translations.number}\n            required={true}\n            aria-label={translations.number}\n            aria-required={true}\n          />\n        </Field>\n\n        <Button\n          className={'order-confirmation-order-search-form__button'}\n          size={'medium'}\n          variant={'primary'}\n          key={'logIn'}\n          type={'submit'}\n        >\n          <Text id={'OrderConfirmation.OrderSearchForm.button'} />\n        </Button>\n      </form>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/Details/Details.css';\nimport { Price, Card } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { OrderDetails } from '@/order-confirmation/reducers/orderConfirmation';\nimport {\n  StaticSkeleton,\n  DetailsSkeleton,\n} from '@/order-confirmation/components';\n\nexport interface DetailsProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  orderDetails: OrderDetails | null;\n}\n\nexport const Details: FunctionComponent<DetailsProps> = ({\n  isLoading,\n  orderDetails,\n}) => {\n  if (isLoading) {\n    return <DetailsSkeleton />;\n  }\n\n  const hasOrderDetails = orderDetails && orderDetails?.number;\n\n  const contactDetails = orderDetails?.email || '';\n  const hasToDisplayContactDetails = orderDetails && contactDetails !== '';\n\n  const shippingAddress = orderDetails?.shipping_address;\n  const hasToDisplayShippingAddress = orderDetails && shippingAddress !== null;\n\n  const billingAddress = orderDetails?.billing_address;\n  const hasToDisplayBillingAddress = orderDetails && billingAddress !== null;\n\n  const shippingMethod = orderDetails?.shipping_method;\n  const shippingCost = orderDetails?.total?.total_shipping?.value;\n  const shippingCurrency = orderDetails?.total?.total_shipping?.currency;\n  const hasToDisplayShippingMethod =\n    orderDetails && shippingMethod && shippingCurrency && shippingCost != null;\n\n  const paymentMethods = orderDetails?.payment_methods;\n  const hasPaymentMethod = paymentMethods && paymentMethods.length > 0;\n  const selectedPaymentMethod = hasPaymentMethod ? paymentMethods[0]?.name : '';\n  const hasToDisplayPaymentMethod =\n    orderDetails && hasPaymentMethod && selectedPaymentMethod !== '';\n\n  return (\n    <Card\n      data-testid=\"order-confirmation-details\"\n      variant={'secondary'}\n      className={'order-confirmation-details order-confirmation__card'}\n    >\n      <div className={'order-confirmation-details__header'}>\n        <h2 className={'order-confirmation-details__title'}>\n          <Text id={'OrderConfirmation.Details.title'} />\n        </h2>\n      </div>\n\n      <div className={'order-confirmation-details__contact'}>\n        {(!orderDetails || hasToDisplayContactDetails) && (\n          <h3>\n            <Text id={'OrderConfirmation.Details.contact'} />\n          </h3>\n        )}\n\n        {hasToDisplayContactDetails && <p>{contactDetails}</p>}\n\n        {!hasOrderDetails && (\n          <StaticSkeleton\n            rows={1}\n            data-testid=\"order-confirmation-details-contact-skeleton\"\n          />\n        )}\n      </div>\n\n      <div className={'order-confirmation-details__information'}>\n        <div className={'order-confirmation-details__shipping_address'}>\n          {(!hasOrderDetails || hasToDisplayShippingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingAddress && (\n            <>\n              <p>\n                {shippingAddress?.firstname} {shippingAddress?.lastname}\n              </p>\n\n              {shippingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {shippingAddress?.city} {shippingAddress?.region}{' '}\n                {shippingAddress?.postcode}, {shippingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-shipping-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__billing_address'}>\n          {(!hasOrderDetails || hasToDisplayBillingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.billingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayBillingAddress && (\n            <>\n              <p>\n                {billingAddress?.firstname} {billingAddress?.lastname}\n              </p>\n\n              {billingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {billingAddress?.city} {billingAddress?.region}{' '}\n                {billingAddress?.postcode}, {billingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-billing-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__shipping-method'}>\n          {(!hasOrderDetails || hasToDisplayShippingMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingMethod && (\n            <>\n              {shippingCost === 0 ? (\n                <p className=\"order-confirmation-order-summary__price\">\n                  <Text id=\"OrderConfirmation.Details.freeShipping\" />\n                </p>\n              ) : (\n                <p>\n                  <Price amount={shippingCost} currency={shippingCurrency} />{' '}\n                  {shippingMethod}\n                </p>\n              )}\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-shipping-method-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__payment-method'}>\n          {(!hasOrderDetails || hasToDisplayPaymentMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.paymentMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayPaymentMethod && <p>{selectedPaymentMethod}</p>}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-payment-method-skeleton\"\n            />\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Card, Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const DetailsSkeleton: FunctionComponent = () => {\n  return (\n    <Card variant={'secondary'} className={'order-confirmation-details'}>\n      <Skeleton data-testid=\"order-confirmation-details-skeleton\">\n        <SkeletonRow variant={'heading'} size=\"medium\" fullWidth={true} />\n        <SkeletonRow size=\"medium\" />\n        <SkeletonRow variant={'empty'} size=\"medium\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n      </Skeleton>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { Button } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { FooterSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Footer/Footer.css';\n\nexport interface FooterProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\nexport const Footer: FunctionComponent<FooterProps> = ({\n  isLoading,\n  className,\n  routeHome,\n  routeSupport,\n  ...props\n}) => {\n  if (isLoading) {\n    return <FooterSkeleton />;\n  }\n\n  return (\n    <div\n      className={classes(['order-confirmation-footer', className])}\n      {...props}\n    >\n      {routeHome?.() && (\n        <Button\n          data-testid=\"order-confirmation-footer__continue-button\"\n          className=\"order-confirmation-footer__continue-button\"\n          size={'medium'}\n          variant={'primary'}\n          key={'continueShopping'}\n          type={'submit'}\n          href={routeHome?.()}\n        >\n          <Text id={'OrderConfirmation.Footer.continueShopping'} />\n        </Button>\n      )}\n\n      <p className=\"order-confirmation-footer__contact-support\">\n        <Text id={'OrderConfirmation.Footer.help'} />{' '}\n        {routeSupport?.() && (\n          <a\n            href={routeSupport?.()}\n            rel={'noreferrer'}\n            className=\"order-confirmation-footer__contact-support-link\"\n            data-testid=\"order-confirmation-footer__contact-support-link\"\n          >\n            <Text id={'OrderConfirmation.Footer.contactSupport'} />\n          </a>\n        )}\n      </p>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const FooterSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton className={'order-confirmation-footer'}>\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/StaticSkeleton/StaticSkeleton.css';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport interface StaticSkeletonProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  rows: number;\n  size?: 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge';\n}\nexport const StaticSkeleton: FunctionComponent<StaticSkeletonProps> = ({\n  rows,\n  size = 'xsmall',\n  ...props\n}) => {\n  return (\n    <Skeleton className={'static-skeleton'} {...props}>\n      {Array.from(Array(rows).keys()).map((i) => (\n        <SkeletonRow key={i} variant={'heading'} size={size} fullWidth={true} />\n      ))}\n    </Skeleton>\n  );\n};\n","import {\n  OrderSummarySkeleton,\n  StaticSkeleton,\n} from '@/order-confirmation/components';\nimport { Card, Divider, Price } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderSummary/OrderSummary.css';\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport type CartTaxItem = {\n  label: string;\n  amount: {\n    value?: number;\n    currency?: string;\n  };\n};\n\nexport type Summary = {\n  total: {\n    inclTax: {\n      amount: number;\n      currency: string;\n    };\n    exclTax?: {\n      amount: number;\n      currency: string;\n    };\n  };\n  subtotal: {\n    amount: number;\n    currency: string;\n    isTaxIncl: boolean;\n  };\n  shipping?: {\n    amount: number;\n    currency: string;\n    isVirtual?: boolean;\n  };\n  tax?: {\n    amount: number;\n    currency: string;\n    breakdown?: CartTaxItem[];\n  };\n};\n\nexport interface OrderSummaryProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'summary'> {\n  isLoading: boolean;\n  summary?: Summary;\n  variant?: 'primary' | 'secondary';\n}\n\nexport const OrderSummary: FunctionComponent<OrderSummaryProps> = ({\n  className,\n  isLoading,\n  summary,\n  variant = 'secondary',\n}) => {\n  if (isLoading) {\n    return <OrderSummarySkeleton />;\n  }\n\n  const { total, subtotal, shipping, tax } = summary ?? {};\n\n  return (\n    <Card\n      className={classes(['order-confirmation-order-summary', className])}\n      variant={variant}\n    >\n      {/* move heading to elsie? */}\n      <h2 className=\"order-confirmation-order-summary__title\">\n        <Text id=\"OrderConfirmation.OrderSummary.title\" />\n      </h2>\n\n      <Divider variant=\"primary\" />\n\n      {subtotal != undefined ? (\n        <div\n          data-testid=\"order-summary-subtotal\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.subtotal\" />\n          </p>\n          <Price\n            amount={subtotal?.amount}\n            currency={subtotal?.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-subtotal-skeleton\"\n        />\n      )}\n\n      {subtotal?.isTaxIncl && (\n        <div\n          data-testid=\"order-summary-subtotal-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.includingTaxes\" />\n          </p>\n        </div>\n      )}\n\n      {shipping != undefined ? (\n        shipping.isVirtual ? null : (\n          <div\n            data-testid=\"order-summary-shipping\"\n            className=\"order-confirmation-order-summary__row\"\n          >\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.shipping\" />\n            </p>\n\n            {shipping.amount === 0 ? (\n              <p className=\"order-confirmation-order-summary__price\">\n                <Text id=\"OrderConfirmation.OrderSummary.freeShipping\" />\n              </p>\n            ) : (\n              <Price\n                amount={shipping.amount}\n                currency={shipping.currency}\n                className={classes([\n                  'order-confirmation-order-summary__price',\n                  className,\n                ])}\n              />\n            )}\n          </div>\n        )\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-shipping-skeleton\"\n        />\n      )}\n\n      {tax != undefined && !tax.breakdown && (\n        <div\n          data-testid=\"order-summary-tax\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.tax\" />\n          </p>\n          <Price\n            amount={tax.amount}\n            currency={tax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n\n      {tax != undefined && tax.breakdown && (\n        <>\n          <Divider variant=\"secondary\" />\n\n          <div className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--margin-bottom\">\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxBreakdown\" />\n            </p>\n          </div>\n\n          {tax.breakdown.map((tax) => (\n            <div\n              data-testid=\"order-summary-tax-breakdown\"\n              key={tax.label}\n              className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n            >\n              <p>{tax.label}</p>\n\n              <Price\n                amount={tax.amount.value!}\n                currency={tax.amount.currency!}\n                className={classes([\n                  'order-confirmation-order-summary__price',\n                  className,\n                ])}\n              />\n            </div>\n          ))}\n\n          <div\n            data-testid=\"order-summary-tax-breakdown-total\"\n            className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--strong order-confirmation-order-summary__row--margin-top\"\n          >\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxTotal\" />\n            </p>\n\n            <Price\n              amount={tax.amount}\n              currency={tax.currency}\n              className={classes([\n                'order-confirmation-order-summary__price',\n                className,\n              ])}\n            />\n          </div>\n\n          <Divider variant=\"secondary\" />\n        </>\n      )}\n\n      {total != undefined ? (\n        <div\n          data-testid=\"order-summary-total-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--emphasized\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.total\" />\n          </p>\n\n          <Price\n            amount={total?.inclTax.amount}\n            currency={total?.inclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-total-skeleton\"\n        />\n      )}\n\n      {total?.exclTax != undefined && (\n        <div\n          data-testid=\"order-summary-total-excl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.totalExclTax\" />\n          </p>\n\n          <Price\n            amount={total.exclTax.amount}\n            currency={total.exclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const OrderSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-order-summary-skeleton\"\n      className={'order-confirmation-order-summary'}\n    >\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"heading\" size=\"small\" fullWidth={true} lines={3} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { useText } from '@adobe/elsie/i18n';\nimport '@/order-confirmation/components/CartSummaryItem/CartSummaryItem.css';\nimport { CartItem, Image, Price } from '@adobe/elsie/components';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\n\nexport interface CartSummaryItemProps extends HTMLAttributes<HTMLDivElement> {\n  item: ReturnType<typeof transformItems>;\n  taxIncluded?: boolean;\n}\n\nexport const CartSummaryItem: FunctionComponent<CartSummaryItemProps> = ({\n  className,\n  item,\n  taxIncluded = false,\n}) => {\n  const translations = useText({\n    Sender: 'OrderConfirmation.CartSummary.GiftCard.sender',\n    Recipient: 'OrderConfirmation.CartSummary.GiftCard.recipient',\n  });\n\n  let price = item.regularPrice;\n  let total = item.total;\n\n  if (taxIncluded) {\n    price = item.priceInclTax;\n    total = item.totalInclTax;\n  }\n\n  const configurations = {\n    ...('configurableOptions' in item ? item.configurableOptions : {}),\n    ...('senderName' in item && item.senderName\n      ? { [translations.Sender]: item.senderName }\n      : {}),\n    ...('senderEmail' in item && item.senderEmail\n      ? { [translations.Sender]: item.senderEmail }\n      : {}),\n    ...('recipientName' in item && item.recipientName\n      ? { [translations.Recipient]: item.recipientName }\n      : {}),\n    ...('recipientEmail' in item && item.recipientEmail\n      ? { [translations.Recipient]: item.recipientEmail }\n      : {}),\n  };\n\n  return (\n    <div\n      className={classes(['order-confirmation-cart-summary-item', className])}\n    >\n      <CartItem\n        data-testid=\"cart-summary-item\"\n        key={item.uid}\n        taxIncluded={taxIncluded}\n        title={<div data-testid=\"product-name\">{item.name}</div>}\n        sku={<div>{item.sku}</div>}\n        quantity={item.quantity!}\n        image={\n          <Image\n            src={item.image.src!}\n            alt={item.image.alt!}\n            loading=\"lazy\"\n            width=\"80\"\n            height=\"80\"\n            params={{ width: 80 }}\n          />\n        }\n        configurations={configurations}\n        price={\n          <Price\n            amount={item.regularPrice.value}\n            currency={price.currency}\n            weight=\"normal\"\n          />\n        }\n        total={\n          <>\n            <Price\n              amount={item.regularPrice.value * item.quantity!}\n              currency={price.currency}\n              variant={item.discounted ? 'strikethrough' : 'default'}\n            />\n\n            {item.discounted && (\n              <Price amount={total.value} currency={total.currency!} sale />\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { GuestOrderDataFragment } from '@/order-confirmation/__generated__/types';\n\ntype NonNullableItems = NonNullable<GuestOrderDataFragment['items']>;\ntype NonNullableItem = NonNullable<NonNullableItems[number]>;\n\nexport function transformItems(item: NonNullableItem) {\n  return {\n    uid: item.id,\n    quantity: item.quantity_ordered,\n    sku: item.product!.sku,\n    name: item.product!.name,\n    image: {\n      src: item.product!.thumbnail!.url,\n      alt: item.product!.thumbnail!.label,\n    },\n    price: {\n      value: item.product_sale_price.value,\n      currency: item.product_sale_price.currency,\n    },\n    priceInclTax: {\n      value: item.product_sale_price.value!,\n      currency: item.product_sale_price.currency!,\n    },\n    total: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    totalInclTax: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    discount: {\n      value: 0,\n      currency: item.product_sale_price.currency,\n    },\n    regularPrice: {\n      value: item.product!.price_range.maximum_price!.regular_price.value!,\n      currency:\n        item.product!.price_range.maximum_price!.regular_price.currency!,\n    },\n    discounted:\n      item.product!.price_range.maximum_price!.regular_price.value! *\n        item.quantity_ordered! !==\n      item.product_sale_price.value! * item.quantity_ordered!,\n    configurableOptions: transformConfigurableOptions(item),\n    senderName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_name\n        : undefined,\n    senderEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_email!\n        : undefined,\n    recipientEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_email!\n        : undefined,\n    recipientName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_name\n        : undefined,\n  };\n}\nfunction transformConfigurableOptions(item: NonNullableItem) {\n  if (!('selected_options' in item)) return;\n\n  const configurableOptions: Record<string, string> = {};\n\n  for (const option of item.selected_options!) {\n    configurableOptions[option!.label] = option!.value;\n  }\n\n  return configurableOptions;\n}\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { Text } from '@adobe/elsie/i18n';\nimport { Card, Divider } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/CartSummary/CartSummary.css';\nimport { CartSummarySkeleton } from '@/order-confirmation/components/CartSummary';\nimport { CartSummaryItem } from '@/order-confirmation/components/CartSummaryItem';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\nimport { State } from '@/order-confirmation/reducers';\n\n// TODO details type\nexport interface CartSummaryProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  details: State['details'];\n}\n\nexport const CartSummary: FunctionComponent<CartSummaryProps> = ({\n  isLoading,\n  details,\n}) => {\n  if (isLoading) {\n    return <CartSummarySkeleton />;\n  }\n\n  // TODO tax included\n  const taxIncluded = false;\n  const items = details!.items!;\n\n  // const totalQuantity = details?.items?.reduce(\n  //   (total: number, item: any) => total + item.quantity_ordered,\n  //   0\n  // );\n\n  // TODO: Quantity should be based on config: https://jira.corp.adobe.com/browse/USF-1089\n  const totalQuantity = items.length;\n\n  return (\n    <div className=\"order-confirmation-cart-summary\">\n      <Card variant=\"secondary\">\n        <div className=\"order-confirmation-cart-summary__heading\">\n          <h2 className={'order-confirmation-cart-summary__title'}>\n            <Text id=\"OrderConfirmation.CartSummary.title\" /> ({totalQuantity})\n          </h2>\n        </div>\n        <Divider\n          className=\"order-confirmation-cart-summary__divider-top\"\n          variant=\"primary\"\n        />\n\n        <div className=\"order-confirmation-cart-summary__items\">\n          {items?.map((item: any) => {\n            const cartItem = transformItems(item);\n            return (\n              <CartSummaryItem\n                key={cartItem?.uid}\n                item={cartItem}\n                taxIncluded={taxIncluded}\n              />\n            );\n          })}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow, CartItemSkeleton } from '@adobe/elsie/components';\n\nexport const CartSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"cart-summary-skeleton\"\n      className=\"order-confirmation-cart-summary\"\n      style={{ gridTemplateColumns: '1fr' }}\n    >\n      <SkeletonRow variant=\"heading\" fullWidth={true} size=\"medium\" />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n    </Skeleton>\n  );\n};\n","import { CustomerAddressInput } from '@/order-confirmation/__generated__/types';\nimport { OrderDetails } from '@/order-confirmation/reducers';\n\nexport type OrderDetailsAddress =\n  | OrderDetails['shipping_address']\n  | OrderDetails['billing_address'];\n\nexport function transformCustomerAddress(\n  address: OrderDetailsAddress\n): CustomerAddressInput {\n  return {\n    region: {\n      region_id: address?.region_id ? Number(address?.region_id) : null,\n      region: address?.region,\n    },\n    city: address?.city,\n    company: address?.company,\n    country_code: address?.country_code,\n    firstname: address?.firstname,\n    lastname: address?.lastname,\n    middlename: address?.middlename,\n    postcode: address?.postcode,\n    street: address?.street,\n    telephone: address?.telephone,\n  };\n}\n","import {\n  guestOrder,\n  GuestOrderInput,\n  guestOrderByToken,\n  customerOrder,\n} from '@/order-confirmation/api';\nimport {\n  OrderSearchFields,\n  OrderConfirmation as Component,\n} from '@/order-confirmation/components';\nimport {\n  Actions,\n  Alert,\n  AlertCode,\n  AlertType,\n  orderConfirmationReducer,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { useText } from '@adobe/elsie/i18n';\nimport { Container } from '@adobe/elsie/lib';\nimport {\n  HTMLAttributes,\n  useCallback,\n  useState,\n  useEffect,\n  useReducer,\n} from 'preact/compat';\nimport { events } from '@adobe/event-bus';\nimport { transformCustomerAddress } from '@/order-confirmation/data/transforms/transform-customer-address';\nimport type { CustomerAddressInput } from '@/order-confirmation/__generated__/types';\n\nexport interface SignUpInputsDefaultValueSetProps {\n  code: string;\n  defaultValue: string;\n}\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  orderRef?: string;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n  onSignUpClick?: ({\n    inputsDefaultValueSet,\n    addressesData,\n  }: {\n    inputsDefaultValueSet: SignUpInputsDefaultValueSetProps[];\n    addressesData: CustomerAddressInput[];\n  }) => void;\n}\n\nfunction useOrderConfirmation(orderRef?: string) {\n  const [state, dispatch] = useReducer(orderConfirmationReducer, {\n    isLoading: false,\n    orderRef,\n    details: null,\n    isOrderFromSearchForm: false,\n  });\n  const [authenticated, setAuthenticated] = useState<boolean | undefined>();\n\n  const translations = useText({\n    invalidOrder: 'OrderConfirmation.Errors.invalidOrder',\n    invalidSearch: 'OrderConfirmation.Errors.invalidSearch',\n    pageNotFound: 'OrderConfirmation.Errors.pageNotFound',\n    unknown: 'OrderConfirmation.Errors.unknown',\n  });\n\n  const buildAlert = useCallback(\n    (message: string): Alert | undefined => {\n      switch (message) {\n        case 'Invalid order':\n        case 'Order not found':\n        case \"We couldn't locate an order with the information provided.\":\n          return {\n            type: AlertType.WARNING,\n            code: AlertCode.INVALID_ORDER,\n            message: translations.invalidOrder,\n          };\n        case 'Invalid search':\n          return {\n            type: AlertType.WARNING,\n            code: AlertCode.INVALID_SEARCH,\n            message: translations.invalidSearch,\n          };\n      }\n    },\n    [translations.invalidOrder, translations.invalidSearch]\n  );\n\n  const dismissAlert = () => {\n    dispatch({ type: Actions.DISMISS_ALERT });\n  };\n\n  const handleOrderSearch = function (fields: OrderSearchFields) {\n    fetchFormOrderDetails(fields);\n  };\n\n  useEffect(() => {\n    const customerAuthenticated = events.on(\n      'authenticated',\n      (isAuthenticated) => {\n        setAuthenticated(isAuthenticated);\n      },\n      { eager: true }\n    );\n    return () => {\n      customerAuthenticated?.off();\n    };\n  }, []);\n\n  const fetchFormOrderDetails = useCallback(\n    (fields?: OrderSearchFields) => {\n      guestOrder(fields as GuestOrderInput)\n        .then((details) => {\n          // order number is only returned if valid order inputs are provided\n          const hasOrderDetails = !!details?.number;\n\n          const alert = hasOrderDetails\n            ? undefined\n            : buildAlert('Invalid search');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            fromSearchForm: true,\n            alert,\n            details,\n          });\n        })\n        .catch(() => {\n          const alert = buildAlert('Invalid search');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details: null,\n            alert,\n          });\n        });\n    },\n    [buildAlert]\n  );\n\n  const fetchOrderDetails = useCallback(\n    (orderRef: string) => {\n      const fetchOrderApiCall = authenticated\n        ? customerOrder\n        : guestOrderByToken;\n\n      fetchOrderApiCall(orderRef)\n        .then((details) => {\n          // order number is only returned if valid order inputs are provided\n          const hasOrderDetails = !!details?.number;\n\n          const alert = hasOrderDetails\n            ? undefined\n            : buildAlert('Invalid order');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details,\n            alert,\n          });\n        })\n        .catch((error) => {\n          const knownAlert = buildAlert(error.message);\n\n          if (!knownAlert) {\n            console.error(error);\n            return;\n          }\n\n          dispatch({\n            type: Actions.ALERT,\n            alert: knownAlert,\n          });\n        });\n    },\n    [authenticated, buildAlert]\n  );\n\n  useEffect(() => {\n    if (!state.orderRef || authenticated === undefined) return;\n\n    dispatch({ type: Actions.LOADING });\n\n    fetchOrderDetails(state.orderRef);\n  }, [authenticated, fetchOrderDetails, state.orderRef]);\n\n  return {\n    state,\n    authenticated,\n    handleOrderSearch,\n    dismissAlert,\n  };\n}\n\nexport const OrderConfirmation: Container<OrderConfirmationProps> = ({\n  orderRef,\n  routeHome,\n  routeSupport,\n  onSignUpClick,\n}) => {\n  const { state, authenticated, handleOrderSearch, dismissAlert } =\n    useOrderConfirmation(orderRef);\n\n  if (authenticated === undefined) {\n    return null;\n  }\n\n  const shouldDisplayCreateAccount =\n    onSignUpClick && !authenticated && !state.isOrderFromSearchForm;\n\n  const onSignUpClickHandler = shouldDisplayCreateAccount\n    ? () => {\n        const shippingAddress = state.details?.shipping_address;\n        const billingAddress = state.details?.billing_address;\n\n        const inputsDefaultValueSet: SignUpInputsDefaultValueSetProps[] = [\n          { code: 'firstname', defaultValue: billingAddress?.firstname || '' },\n          { code: 'lastname', defaultValue: billingAddress?.lastname || '' },\n          { code: 'email', defaultValue: state.details?.email || '' },\n        ];\n\n        let addressesData: CustomerAddressInput[];\n\n        if (shippingAddress) {\n          const customerShippingAddress: CustomerAddressInput = {\n            ...transformCustomerAddress(shippingAddress),\n            default_shipping: true,\n          };\n\n          const customerBillingAddress: CustomerAddressInput = {\n            ...transformCustomerAddress(billingAddress),\n            default_billing: true,\n          };\n\n          addressesData = [customerBillingAddress, customerShippingAddress];\n        } else {\n          const customerAddress: CustomerAddressInput = {\n            ...transformCustomerAddress(billingAddress),\n            default_billing: true,\n            default_shipping: true,\n          };\n\n          addressesData = [customerAddress];\n        }\n\n        onSignUpClick({ inputsDefaultValueSet, addressesData });\n      }\n    : undefined;\n\n  return (\n    <Component\n      state={state}\n      dismissAlert={dismissAlert}\n      onOrderSearch={handleOrderSearch}\n      routeHome={routeHome}\n      routeSupport={routeSupport}\n      onSignUpClick={onSignUpClickHandler}\n    />\n  );\n};\n"],"names":["useBreakpoint","getBreakpoint","window","innerWidth","breakpoint","setBreakpoint","useState","useEffect","timeoutId","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","Actions","ADD_ORDER_REFERENCE","LOADING","SET_DETAILS","ALERT","DISMISS_ALERT","AlertType","ERROR","WARNING","SUCCESS","AlertCode","INVALID_ORDER","INVALID_SEARCH","UNKNOWN","orderConfirmationReducer","state","action","type","isLoading","details","alert","isOrderFromSearchForm","fromSearchForm","undefined","ConditionalWrapper","children","className","_jsx","_Fragment","mapDetailsToSummary","orderDetails","total","isVirtual","is_virtual","grandTotal","grand_total","subtotal","shipping","total_shipping","tax","total_tax","inclTax","amount","value","currency","isTaxIncl","Aside","summary","_jsxs","OrderSummary","CartSummary","AsideElement","Main","routeHome","routeSupport","onSignUpClick","billingAddress","billing_address","customerName","firstname","orderNumber","number","orderStatus","status","Header","Details","Footer","MainElement","dismissAlert","onOrderSearch","OrderConfirmation","hasOrderDetails","isInvalidOrder","code","isInvalidSearch","classes","OrderSearchForm","heading","message","description","onDismiss","SvgOrderSuccess","props","React","SvgWarningFilled","HeaderSkeleton","Icon","source","OrderSuccess","size","Text","id","fields","name","order","Button","variant","onClick","Skeleton","SkeletonRow","fullWidth","translations","useText","email","postcode","handleSubmit","event","preventDefault","formValues","getFormValues","target","Card","InLineAlert","icon","WarningFilled","onSubmit","Field","Input","autocomplete","placeholder","floatingLabel","required","DetailsSkeleton","contactDetails","hasToDisplayContactDetails","shippingAddress","shipping_address","hasToDisplayShippingAddress","hasToDisplayBillingAddress","shippingMethod","shipping_method","shippingCost","shippingCurrency","hasToDisplayShippingMethod","paymentMethods","payment_methods","hasPaymentMethod","length","selectedPaymentMethod","hasToDisplayPaymentMethod","StaticSkeleton","rows","lastname","street","map","index","city","region","country_code","Price","FooterSkeleton","href","rel","Array","from","keys","i","OrderSummarySkeleton","Divider","breakdown","label","exclTax","lines","CartSummaryItem","item","taxIncluded","Sender","Recipient","price","regularPrice","priceInclTax","totalInclTax","configurations","configurableOptions","senderName","senderEmail","recipientName","recipientEmail","CartItem","title","sku","quantity","image","Image","src","alt","loading","width","height","params","weight","discounted","sale","uid","transformItems","quantity_ordered","product","thumbnail","url","product_sale_price","discount","price_range","maximum_price","regular_price","transformConfigurableOptions","__typename","gift_card","sender_name","sender_email","recipient_email","recipient_name","option","selected_options","CartSummarySkeleton","items","totalQuantity","cartItem","style","gridTemplateColumns","CartItemSkeleton","transformCustomerAddress","address","region_id","Number","company","middlename","telephone","useOrderConfirmation","orderRef","dispatch","useReducer","authenticated","setAuthenticated","invalidOrder","invalidSearch","pageNotFound","unknown","buildAlert","useCallback","handleOrderSearch","fetchFormOrderDetails","customerAuthenticated","events","on","isAuthenticated","eager","off","then","catch","fetchOrderDetails","customerOrder","guestOrderByToken","error","knownAlert","console","onSignUpClickHandler","inputsDefaultValueSet","defaultValue","addressesData","customerShippingAddress","default_shipping","default_billing","Component"],"mappings":"+yBAEO,MAAMA,GAAgBA,IAAM,CACjC,MAAMC,EAAgBA,IAChBC,OAAOC,YAAc,KAAa,UAClCD,OAAOC,YAAc,KAAa,SAClCD,OAAOC,YAAc,KAAa,QAClCD,OAAOC,YAAc,IAAY,SAE9B,QAGH,CAACC,EAAYC,CAAa,EAAIC,EAElCL,EAAe,CAAA,EAEjBM,OAAAA,EAAU,IAAM,CACVC,IAAAA,EAEJ,MAAMC,EAAeA,IAAM,CACrBD,GAAWE,aAAaF,CAAS,EACrCA,EAAYG,WAAW,IAAMN,EAAcJ,EAAe,CAAA,EAAG,EAAE,CAAA,EAG1DW,cAAAA,iBAAiB,SAAUH,CAAY,EAEvC,IAAM,CACJI,OAAAA,oBAAoB,SAAUJ,CAAY,EAC7CD,GAAWE,aAAaF,CAAS,CAAA,CAEzC,EAAG,CAAE,CAAA,EAEEJ,CACT,EC5BYU,IAAAA,GAAAA,IACVC,EAAAA,oBAAsB,sBACtBC,EAAAA,QAAU,UACVC,EAAAA,YAAc,cACdC,EAAAA,MAAQ,QACRC,EAAAA,cAAgB,gBALNL,IAAAA,GAAAA,CAAAA,CAAAA,EAuBAM,GAAAA,IACVC,EAAAA,MAAQ,QACRC,EAAAA,QAAU,UACVC,EAAAA,QAAU,UAHAH,IAAAA,GAAAA,CAAAA,CAAAA,EAMAI,GAAAA,IACVC,EAAAA,cAAgB,gBAChBC,EAAAA,eAAiB,iBACjBC,EAAAA,QAAU,gBAHAH,IAAAA,GAAAA,CAAAA,CAAAA,EAmCII,SAAAA,GAAyBC,EAAcC,EAAuB,CAC5E,OAAQA,EAAOC,KAAI,CACjB,IAAKjB,UACI,MAAA,CACL,GAAGe,EACHG,UAAW,EAAA,EAEf,IAAKlB,cACI,MAAA,CACL,GAAGe,EACHG,UAAW,GACXC,QAASH,EAAOG,QAChBC,MAAOJ,EAAOI,MACdC,sBAAuBL,EAAOM,gBAAkB,EAAA,EAEpD,IAAKtB,QACI,MAAA,CACL,GAAGe,EACHG,UAAW,GACXE,MAAOJ,EAAOI,KAAAA,EAElB,IAAKpB,gBACI,MAAA,CACL,GAAGe,EACHK,MAAOG,MAAAA,EAEX,QACSR,OAAAA,CACX,CACF,CC9EA,MAAMS,EAGDA,CAAC,CAAEC,SAAAA,EAAUC,UAAAA,CAAU,IACPxC,OACG,QACpByC,EAAA,MAAA,CAAKD,UAAAA,EAAqBD,SAAAA,CAAAA,CAAgB,EAE1CE,EAAAC,EAAA,CAAAH,SAAAA,CAAAA,CAAc,EAclB,SAASI,GAAoBC,EAAwC,CACnE,MAAMC,EAAQD,GAAAA,YAAAA,EAAcC,MACtBC,EAAYF,GAAAA,YAAAA,EAAcG,WAEhC,GAAI,CAACF,EACIR,OAGT,MAAMW,EAAaH,GAAAA,YAAAA,EAAOI,YACpBC,EAAWL,GAAAA,YAAAA,EAAOK,SAClBC,EAAWN,GAAAA,YAAAA,EAAOO,eAClBC,EAAMR,GAAAA,YAAAA,EAAOS,UAEZ,MAAA,CACLT,MAAO,CACLU,QAAS,CACPC,QAAQR,GAAAA,YAAAA,EAAYS,QAAS,EAC7BC,UAAUV,GAAAA,YAAAA,EAAYU,WAAY,EACpC,CACF,EACAR,SAAU,CACRM,QAAQN,GAAAA,YAAAA,EAAUO,QAAS,EAC3BC,UAAUR,GAAAA,YAAAA,EAAUQ,WAAY,GAChCC,UAAW,EACb,EACAR,SAAU,CACRK,QAAQL,GAAAA,YAAAA,EAAUM,QAAS,EAC3BC,UAAUP,GAAAA,YAAAA,EAAUO,WAAY,GAChCZ,UAAAA,CACF,EACAO,IAAK,CACHG,QAAQH,GAAAA,YAAAA,EAAKI,QAAS,EACtBC,UAAUL,GAAAA,YAAAA,EAAKK,WAAY,EAC7B,CAAA,CAEJ,CAMA,MAAME,GAAuCA,CAAC,CAAE/B,MAAAA,CAAM,IAAM,CACpD,KAAA,CAAEG,UAAAA,EAAWC,QAAAA,CAAYJ,EAAAA,EACzBgC,EAAUlB,GAAoBV,CAAO,EAE3C,OACE6B,EAAApB,EAAA,CAAAH,SAAA,CACEE,EAACsB,GAAY,CAAC/B,UAAAA,EAAsB6B,QAAAA,CAAAA,CAAmB,EACvDpB,EAACuB,GAAW,CAAChC,UAAAA,EAAsBC,QAAAA,CAAAA,CAAmB,CAAC,CAAA,CACvD,CAEN,EAEMgC,GAA8CA,CAAC,CAAEpC,MAAAA,CAAM,IAEzDY,EAACH,EAAkB,CAACE,UAAU,4BAA2BD,SACvDE,EAACmB,GAAK,CAAC/B,MAAAA,CAAAA,CAAe,CAAA,CACJ,EAIlBqC,GAAkDA,CAAC,CACvDrC,MAAAA,EACAsC,UAAAA,EACAC,aAAAA,EACAC,cAAAA,CACF,IAAM,CACE,KAAA,CAAEpC,QAAAA,EAASD,UAAAA,CAAcH,EAAAA,EAEzByC,EAAiBrC,GAAAA,YAAAA,EAASsC,gBAC1BC,GAAeF,GAAAA,YAAAA,EAAgBG,YAAa,GAC5CC,GAAczC,GAAAA,YAAAA,EAAS0C,SAAU,GACjCC,GAAc3C,GAAAA,YAAAA,EAAS4C,SAAU,GAIvC,OACEf,EAAApB,EAAA,CAAAH,SAAA,EACIP,GAAc,CAACA,IAJM,CAAC,CAACwC,GAAgB,CAAC,CAACE,KAKzCjC,EAACqC,GAAM,CACL9C,UAAAA,EACAwC,aAAAA,EACAE,YAAAA,EACAE,YAAAA,EACAP,cAAAA,CAAAA,CACD,EAGH5B,EAACsC,GAAO,CAAC/C,UAAAA,EAAsBY,aAAcX,CAAAA,CAAU,EAEvDQ,EAACuC,GAAM,CACLhD,UAAAA,EACAmC,UAAAA,EACAC,aAAAA,CAAAA,CACD,CAAC,CAAA,CACF,CAEN,EAEMa,GAAyDA,CAAC,CAC9DpD,MAAAA,EACAsC,UAAAA,EACAC,aAAAA,EACAc,aAAAA,EACAC,cAAAA,EACAd,cAAAA,CACF,IAEI5B,EAACH,EAAkB,CAACE,UAAU,2BAA0BD,SACtDE,EAACyB,GAAI,CACHrC,MAAAA,EACAsC,UAAAA,EACAC,aAAAA,EACAc,aAAAA,EACAC,cAAAA,EACAd,cAAAA,CAAAA,CACD,CAAA,CACiB,EAIXe,GAA+DA,CAAC,CAC3E5C,UAAAA,EACAX,MAAAA,EACAqD,aAAAA,EACAf,UAAAA,EACAC,aAAAA,EACAe,cAAAA,EACAd,cAAAA,CACF,IAAM,CACE,KAAA,CAAEpC,QAAAA,EAASC,MAAAA,EAAOF,UAAAA,CAAcH,EAAAA,EAChCwD,EAAkB,CAAC,EAACpD,GAAAA,MAAAA,EAAS0C,QAC7BW,EAAiBpD,GAASA,EAAMqD,OAAS/D,EAAUC,cACnD+D,EAAkBtD,GAASA,EAAMqD,OAAS/D,EAAUE,eAEtD,MAAA,CAACM,GAAa,CAACqD,EAEf5C,EAAA,MAAA,CAAKD,UAAWiD,EAAQ,CAAC,qBAAsBjD,CAAS,CAAC,EAAED,SACzDE,EAACiD,GAAe,CACdxD,MACEoD,GAAkBE,EACd,CACEG,QAASzD,EAAM0D,QACfC,YAAa,GACb9D,KAAMG,EAAMH,KACZ+D,UAAWZ,CAEb7C,EAAAA,OAEN8C,cAAAA,CAAAA,CACD,CAAA,CACE,EAKPrB,EAAA,MAAA,CAAKtB,UAAWiD,EAAQ,CAAC,qBAAsBjD,CAAS,CAAC,EAAED,SAAA,CACzDE,EAACwC,GAAW,CACVpD,MAAAA,EACAqD,aAAAA,EACAf,UAAAA,EACAC,aAAAA,EACAe,cAAAA,EACAd,cAAAA,CAAAA,CACD,EACD5B,EAACwB,GAAY,CAACpC,MAAAA,CAAAA,CAAe,CAAC,CAAA,CAC3B,CAET,ECjNMkE,GAAmBC,GAA0BC,EAAM,cAAc,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAK,EAAoBC,EAAM,cAAc,IAAK,CAAE,SAAU,wBAA0B,EAAkBA,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,EAAG,8CAA+C,OAAQ,eAAgB,cAAe,QAAS,eAAgB,OAAO,CAAE,EAAmBA,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,EAAG,gEAAiE,OAAQ,eAAgB,cAAe,QAAS,eAAgB,OAAO,CAAE,EAAmBA,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,EAAG,yCAA0C,OAAQ,eAAgB,cAAe,QAAS,eAAgB,OAAS,CAAA,EAAmBA,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,EAAG,qDAAsD,OAAQ,eAAgB,eAAgB,OAAO,CAAE,EAAmBA,EAAM,cAAc,OAAQ,CAAE,UAAW,eAAgB,aAAc,qBAAsB,EAAG,gKAAiK,OAAQ,cAAgB,CAAA,EAAmBA,EAAM,cAAc,OAAQ,CAAE,UAAW,eAAgB,aAAc,qBAAsB,EAAG,6CAA8C,OAAQ,eAAgB,cAAe,SAAU,eAAgB,OAAO,CAAE,CAAC,EAAmBA,EAAM,cAAc,OAAQ,KAAsBA,EAAM,cAAc,WAAY,CAAE,GAAI,kBAAoB,EAAkBA,EAAM,cAAc,OAAQ,CAAE,MAAO,GAAI,OAAQ,MAAO,KAAM,QAAS,UAAW,sBAAsB,CAAE,CAAC,CAAC,CAAC,ECAt1DC,GAAoBF,GAA0BC,EAAM,cAAc,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAO,EAAkBC,EAAM,cAAc,OAAQ,CAAE,aAAc,qBAAsB,SAAU,UAAW,SAAU,UAAW,EAAG,yJAA0J,KAAM,cAAc,CAAE,CAAC,ECahenB,GAAyCA,CAAC,CACrD9C,UAAAA,EACAwC,aAAAA,EACAE,YAAAA,EACAE,YAAAA,EACAP,cAAAA,CACF,IACMrC,EACKS,EAAC0D,GAAc,CAAA,CAAE,EAIxBrC,EAAA,MAAA,CAAKtB,UAAU,qDAAoDD,SAAA,CACjEE,EAAC2D,EAAI,CACHC,OAAQC,GACRC,KAAK,KACL/D,UAAU,iCAAA,CACX,EAEDC,EAAA,KAAA,CAAID,UAAU,mCAAkCD,SAC7CiC,EACC/B,EAAC+D,EAAI,CACHC,GAAI,iCACJC,OAAQ,CAAEC,KAAMnC,CAAa,CAAA,CAC9B,EAED/B,EAAC+D,EAAI,CAACC,GAAI,uCAAA,CAA0C,CAAA,CAEpD,EAEH/B,GACCZ,EAAA,IAAA,CAAGtB,UAAU,mCAAkCD,SAAA,CAC7CE,EAAC+D,EAAI,CACHC,GAAI,iCACJC,OAAQ,CAAEE,MAAOlC,CAAY,CAAA,CAC9B,EACAE,IAAgBvC,QAAauC,IAAgB,IAC5Cd,EAAA,OAAA,CAAMtB,UAAU,oCAAmCD,UAChD,IAAI,IACHqC,EAAY,GAChB,CAAA,CAAM,CACP,CAAA,CACA,EAGJP,GACCP,EAAA,MAAA,CAAKtB,UAAU,oCAAmCD,UAChDE,EAAA,IAAA,CAAGD,UAAU,6CAA4CD,SACvDE,EAAC+D,EAAI,CAACC,GAAI,gDAAA,CAAmD,CAAA,CAC5D,EACHhE,EAACoE,EAAM,CACL,cAAY,wBACZrE,UAAU,4CACV+D,KAAK,SACLO,QAAQ,YACR/E,KAAK,SACLgF,QAAS1C,EAAc9B,SAEvBE,EAAC+D,EAAI,CAACC,GAAI,+CAAA,CAAkD,CAAA,CACtD,CAAC,CAAA,CACN,CACN,CAAA,CACE,ECzEIN,GAAoCA,IAE7CrC,EAACkD,EAAQ,CACP,cAAY,qCACZxE,UAAW,4BAA4BD,SAAA,CAEvCE,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,SAASW,UAAW,EAAA,CAAO,EAC/DzE,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,QAAA,CAAU,EAC9C9D,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,QAAA,CAAU,EAC9C9D,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,QAAA,CAAU,EAC9C9D,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,QAAA,CAAU,EAC9C9D,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,QAAA,CAAU,EAC9C9D,EAACwE,EAAW,CAACV,KAAK,QAAQW,UAAW,EAAA,CAAO,EAC5CzE,EAACwE,EAAW,CAACH,QAAS,UAAWP,KAAK,SAASW,UAAW,EAAA,CAAO,CAAC,CAAA,CAC1D,ECUDxB,GAA2DA,CAAC,CACvExD,MAAAA,EACAiD,cAAAA,CACF,IAAM,CACJ,MAAMgC,EAAeC,EAAQ,CAC3BC,MAAO,0CACPC,SAAU,6CACV3C,OAAQ,+CAAA,CACT,EAEK4C,EAAgBC,GAAiB,CACrCA,EAAMC,eAAe,EACfC,MAAAA,EAAaC,GAAcH,EAAMI,MAA0B,EACjEzC,GAAAA,MAAAA,EAAgBuC,EAAgC,EAGlD,OACE5D,EAAC+D,EAAI,CACHf,QAAS,YACTtE,UACE,gEACDD,UAEDE,EAAA,KAAA,CAAID,UAAW,8CAA8CD,SAC3DE,EAAC+D,EAAI,CAACC,GAAI,yCAAA,CAA4C,CAAA,CACpD,EAEJhE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAI,+CAAA,CAAkD,CAAA,CAC3D,EAEFvE,GACCO,EAACqF,GAAW,CACVtF,UAAW,8CACX,cAAY,2BACZuF,KAAMtF,EAAC2D,EAAI,CAACC,OAAQ2B,EAAAA,CAAgB,EAAE,GAClC9F,CAAAA,CACL,EAGH4B,EAAA,OAAA,CACEtB,UAAW,+CACXyF,SAAUV,EAAahF,UAEvBuB,EAAA,MAAA,CAAKtB,UAAW,uDAAuDD,SAAA,CACrEE,EAACyF,EAAK,CAAA3F,SACJE,EAAC0F,EAAK,CACJ1B,GAAG,cACHE,KAAK,QACL5E,KAAM,QACNqG,aAAc,QACdC,YAAalB,EAAaE,MAC1BiB,cAAenB,EAAaE,MAC5BkB,SAAU,GACV,aAAYpB,EAAaE,MACzB,gBAAe,EAAA,CAChB,CAAA,CACI,EAEP5E,EAACyF,EAAK,CAAA3F,SACJE,EAAC0F,EAAK,CACJ1B,GAAG,WACHE,KAAK,WACL5E,KAAM,OACNqG,aAAc,cACdC,YAAalB,EAAaG,SAC1BgB,cAAenB,EAAaG,SAC5BiB,SAAU,GACV,aAAYpB,EAAaG,SACzB,gBAAe,EAAA,CAChB,CAAA,CACI,CAAC,CAAA,CACL,EAEL7E,EAACyF,EAAK,CAAA3F,SACJE,EAAC0F,EAAK,CACJ1B,GAAG,eACHE,KAAK,SACL5E,KAAM,OACNsG,YAAalB,EAAaxC,OAC1B2D,cAAenB,EAAaxC,OAC5B4D,SAAU,GACV,aAAYpB,EAAaxC,OACzB,gBAAe,EAAA,CAChB,CAAA,CACI,EAEPlC,EAACoE,EAAM,CACLrE,UAAW,+CACX+D,KAAM,SACNO,QAAS,UAET/E,KAAM,SAASQ,SAEfE,EAAC+D,EAAI,CAACC,GAAI,0CAAA,CAA6C,CAAC,EAHnD,OAIC,CAAC,CAAA,CACL,CAAC,CAAA,CACH,CAEV,EC9Ga1B,GAA2CA,CAAC,CACvD/C,UAAAA,EACAY,aAAAA,CACF,IAAM,eACJ,GAAIZ,EACKS,OAAAA,EAAC+F,GAAe,CAAA,CAAE,EAGrBnD,MAAAA,EAAkBzC,IAAgBA,GAAAA,YAAAA,EAAc+B,QAEhD8D,GAAiB7F,GAAAA,YAAAA,EAAcyE,QAAS,GACxCqB,EAA6B9F,GAAgB6F,IAAmB,GAEhEE,EAAkB/F,GAAAA,YAAAA,EAAcgG,iBAChCC,EAA8BjG,GAAgB+F,IAAoB,KAElErE,EAAiB1B,GAAAA,YAAAA,EAAc2B,gBAC/BuE,EAA6BlG,GAAgB0B,IAAmB,KAEhEyE,EAAiBnG,GAAAA,YAAAA,EAAcoG,gBAC/BC,GAAerG,GAAAA,EAAAA,GAAAA,YAAAA,EAAcC,QAAdD,YAAAA,EAAqBQ,iBAArBR,YAAAA,EAAqCa,MACpDyF,GAAmBtG,GAAAA,EAAAA,GAAAA,YAAAA,EAAcC,QAAdD,YAAAA,EAAqBQ,iBAArBR,YAAAA,EAAqCc,SACxDyF,EACJvG,GAAgBmG,GAAkBG,GAAoBD,GAAgB,KAElEG,EAAiBxG,GAAAA,YAAAA,EAAcyG,gBAC/BC,EAAmBF,GAAkBA,EAAeG,OAAS,EAC7DC,EAAwBF,GAAmBF,EAAAA,EAAe,CAAC,IAAhBA,YAAAA,EAAmBzC,KAAO,GACrE8C,EACJ7G,GAAgB0G,GAAoBE,IAA0B,GAEhE,OACE1F,EAAC+D,EAAI,CACH,cAAY,6BACZf,QAAS,YACTtE,UAAW,sDAAsDD,UAEjEE,EAAA,MAAA,CAAKD,UAAW,qCAAqCD,SACnDE,EAAA,KAAA,CAAID,UAAW,oCAAoCD,SACjDE,EAAC+D,EAAI,CAACC,GAAI,iCAAA,CAAoC,CAAA,CAC5C,CAAA,CACD,EAEL3C,EAAA,MAAA,CAAKtB,UAAW,sCAAsCD,WAClD,CAACK,GAAgB8F,IACjBjG,EAAA,KAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAI,mCAAA,CAAsC,CAAA,CAC9C,EAGLiC,GAA8BjG,EAAA,IAAA,CAAAF,SAAIkG,CAAkB,CAAA,EAEpD,CAACpD,GACA5C,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,6CAAA,CACb,CACF,CAAA,CACE,EAEL7F,EAAA,MAAA,CAAKtB,UAAW,0CAA0CD,UACxDuB,EAAA,MAAA,CAAKtB,UAAW,+CAA+CD,WAC3D,CAAC8C,GAAmBwD,IACpBpG,EAAA,KAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAI,2CAAA,CAA8C,CAAA,CACtD,EAGLoC,GACC/E,EAAApB,EAAA,CAAAH,UACEuB,EAAA,IAAA,CAAAvB,SAAA,CACGoG,GAAAA,YAAAA,EAAiBlE,UAAU,IAAEkE,GAAAA,YAAAA,EAAiBiB,QAAQ,CAAA,CACtD,EAEFjB,GAAAA,YAAAA,EAAiBkB,OAAOC,IAAI,CAACD,EAAQE,IACpCtH,EAAA,IAAA,CAAAF,SAAgBsH,CAARE,EAAAA,CAAkB,GAG5BjG,EAAA,IAAA,CAAAvB,SAAA,CACGoG,GAAAA,YAAAA,EAAiBqB,KAAK,IAAErB,GAAAA,YAAAA,EAAiBsB,OAAQ,IACjDtB,GAAAA,YAAAA,EAAiBrB,SAAS,KAAGqB,GAAAA,YAAAA,EAAiBuB,YAAY,CAAA,CAC1D,CAAC,CACJ,CAAA,EAGH,CAAC7E,GACA5C,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,8CAAA,CACb,CACF,CAAA,CACE,EAEL7F,EAAA,MAAA,CAAKtB,UAAW,8CAA8CD,WAC1D,CAAC8C,GAAmByD,IACpBrG,EAAA,KAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAI,0CAAA,CAA6C,CAAA,CACrD,EAGLqC,GACChF,EAAApB,EAAA,CAAAH,UACEuB,EAAA,IAAA,CAAAvB,SAAA,CACG+B,GAAAA,YAAAA,EAAgBG,UAAU,IAAEH,GAAAA,YAAAA,EAAgBsF,QAAQ,CAAA,CACpD,EAEFtF,GAAAA,YAAAA,EAAgBuF,OAAOC,IAAI,CAACD,EAAQE,IACnCtH,EAAA,IAAA,CAAAF,SAAgBsH,CAARE,EAAAA,CAAkB,GAG5BjG,EAAA,IAAA,CAAAvB,SAAA,CACG+B,GAAAA,YAAAA,EAAgB0F,KAAK,IAAE1F,GAAAA,YAAAA,EAAgB2F,OAAQ,IAC/C3F,GAAAA,YAAAA,EAAgBgD,SAAS,KAAGhD,GAAAA,YAAAA,EAAgB4F,YAAY,CAAA,CACxD,CAAC,CACJ,CAAA,EAGH,CAAC7E,GACA5C,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,6CAAA,CACb,CACF,CAAA,CACE,EAEL7F,EAAA,MAAA,CAAKtB,UAAW,8CAA8CD,WAC1D,CAAC8C,GAAmB8D,IACpB1G,EAAA,KAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAI,0CAAA,CAA6C,CAAA,CACrD,EAGL0C,GACC1G,EAAAC,EAAA,CAAAH,SACG0G,IAAiB,EAChBxG,EAAA,IAAA,CAAGD,UAAU,0CAAyCD,SACpDE,EAAC+D,EAAI,CAACC,GAAG,wCAAA,CAA0C,CAAA,CAClD,EAEH3C,EAAA,IAAA,CAAAvB,SAAA,CACEE,EAAC0H,EAAK,CAAC3G,OAAQyF,EAAcvF,SAAUwF,CAAAA,CAAmB,EAAE,IAC3DH,CAAc,CAAA,CACd,CAEL,CAAA,EAGH,CAAC1D,GACA5C,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,qDAAA,CACb,CACF,CAAA,CACE,EAEL7F,EAAA,MAAA,CAAKtB,UAAW,6CAA6CD,WACzD,CAAC8C,GAAmBoE,IACpBhH,EAAA,KAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAI,yCAAA,CAA4C,CAAA,CACpD,EAGLgD,GAA6BhH,EAAA,IAAA,CAAAF,SAAIiH,CAAyB,CAAA,EAE1D,CAACnE,GACA5C,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,oDAAA,CACb,CACF,CAAA,CACE,CAAC,CAAA,CACH,CAAC,CAAA,CACF,CAEV,EC3LanB,GAAqCA,IAE9C/F,EAACoF,EAAI,CAACf,QAAS,YAAatE,UAAW,6BAA6BD,SAClEuB,EAACkD,EAAQ,CAAC,cAAY,sCAAqCzE,SAAA,CACzDE,EAACwE,EAAW,CAACH,QAAS,UAAWP,KAAK,SAASW,UAAW,EAAA,CAAO,EACjEzE,EAACwE,EAAW,CAACV,KAAK,QAAA,CAAU,EAC5B9D,EAACwE,EAAW,CAACH,QAAS,QAASP,KAAK,QAAA,CAAU,EAC9C9D,EAACwE,EAAW,CAACV,KAAK,QAAA,CAAU,EAC5B9D,EAACwE,EAAW,CAACV,KAAK,QAAA,CAAU,EAC5B9D,EAACwE,EAAW,CAACV,KAAK,QAAA,CAAU,EAC5B9D,EAACwE,EAAW,CAACV,KAAK,QAAA,CAAU,CAAC,CAAA,CACrB,CAAA,CACN,ECDGvB,GAAyCA,CAAC,CACrDhD,UAAAA,EACAQ,UAAAA,EACA2B,UAAAA,EACAC,aAAAA,EACA,GAAG4B,CACL,IACMhE,EACKS,EAAC2H,GAAc,CAAA,CAAE,EAIxBtG,EAAA,MAAA,CACEtB,UAAWiD,EAAQ,CAAC,4BAA6BjD,CAAS,CAAC,EAAE,GACzDwD,EAAKzD,WAER4B,GAAAA,YAAAA,MACC1B,EAACoE,EAAM,CACL,cAAY,6CACZrE,UAAU,6CACV+D,KAAM,SACNO,QAAS,UAET/E,KAAM,SACNsI,KAAMlG,GAAAA,YAAAA,IAAc5B,SAEpBE,EAAC+D,EAAI,CAACC,GAAI,2CAAA,CAA8C,CAAA,EAJnD,kBAKC,EAGV3C,EAAA,IAAA,CAAGtB,UAAU,6CAA4CD,SAAA,CACvDE,EAAC+D,EAAI,CAACC,GAAI,+BAAkC,CAAA,EAAE,KAC7CrC,GAAAA,YAAAA,MACC3B,EAAA,IAAA,CACE4H,KAAMjG,GAAAA,YAAAA,IACNkG,IAAK,aACL9H,UAAU,kDACV,cAAY,kDAAiDD,SAE7DE,EAAC+D,EAAI,CAACC,GAAI,yCAAA,CAA4C,CAAA,CACrD,CACJ,CAAA,CACA,CAAC,CAAA,CACD,ECtDI2D,GAAoCA,IAE7CtG,EAACkD,EAAQ,CAACxE,UAAW,4BAA4BD,SAAA,CAC/CE,EAACwE,EAAW,CAACV,KAAK,QAAQW,UAAW,EAAA,CAAO,EAC5CzE,EAACwE,EAAW,CAACH,QAAS,UAAWP,KAAK,SAASW,UAAW,EAAA,CAAO,CAAC,CAAA,CAC1D,ECEDwC,EAAyDA,CAAC,CACrEC,KAAAA,EACApD,KAAAA,EAAO,SACP,GAAGP,CACL,IAEIvD,EAACuE,EAAQ,CAACxE,UAAW,kBAAkB,GAAKwD,EAAKzD,SAC9CgI,MAAMC,KAAKD,MAAMZ,CAAI,EAAEc,KAAM,CAAA,EAAEX,IAC9BrH,GAAAA,EAACwE,EAAW,CAASH,QAAS,UAAWP,KAAAA,EAAYW,UAAW,EAAK,EAAnDwD,CAAqD,CACxE,CAAA,CACO,ECkCD3G,GAAqDA,CAAC,CACjEvB,UAAAA,EACAR,UAAAA,EACA6B,QAAAA,EACAiD,QAAAA,EAAU,WACZ,IAAM,CACJ,GAAI9E,EACKS,OAAAA,EAACkI,GAAoB,CAAA,CAAE,EAG1B,KAAA,CAAE9H,MAAAA,EAAOK,SAAAA,EAAUC,SAAAA,EAAUE,IAAAA,CAAAA,EAAQQ,GAAW,CAAA,EAEtD,OACEC,EAAC+D,EAAI,CACHrF,UAAWiD,EAAQ,CAAC,mCAAoCjD,CAAS,CAAC,EAClEsE,QAAAA,EAAiBvE,UAGjBE,EAAA,KAAA,CAAID,UAAU,0CAAyCD,SACrDE,EAAC+D,EAAI,CAACC,GAAG,sCAAA,CAAwC,CAAA,CAC/C,EAEJhE,EAACmI,EAAO,CAAC9D,QAAQ,SAAW,CAAA,EAE3B5D,GAAYb,KACXyB,EAAA,MAAA,CACE,cAAY,yBACZtB,UAAU,wCAAuCD,UAEjDE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,yCAAA,CAA2C,CAAA,CACnD,EACHhE,EAAC0H,EAAK,CACJ3G,OAAQN,GAAAA,YAAAA,EAAUM,OAClBE,SAAUR,GAAAA,YAAAA,EAAUQ,SACpBlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CAAC,CAAA,CACC,EAELC,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,oDACb,CAAA,GAGFzG,GAAAA,YAAAA,EAAUS,YACTlB,EAAA,MAAA,CACE,cAAY,kCACZD,UAAU,qFAAoFD,SAE9FE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,+CAAA,CAAiD,CAAA,CACzD,CAAA,CACA,EAGNtD,GAAYd,KACXc,EAASL,UAAY,KACnBgB,EAAA,MAAA,CACE,cAAY,yBACZtB,UAAU,wCAAuCD,UAEjDE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,yCAAA,CAA2C,CACnD,CAAA,EAEFtD,EAASK,SAAW,EACnBf,EAAA,IAAA,CAAGD,UAAU,0CAAyCD,SACpDE,EAAC+D,EAAI,CAACC,GAAG,6CAAA,CAA+C,CAAA,CACvD,EAEHhE,EAAC0H,EAAK,CACJ3G,OAAQL,EAASK,OACjBE,SAAUP,EAASO,SACnBlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CACF,CAAA,CACE,EAGPC,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,oDAAA,CACb,EAGFtG,GAAOhB,MAAa,CAACgB,EAAIwH,WACxB/G,EAAA,MAAA,CACE,cAAY,oBACZtB,UAAU,wCAAuCD,UAEjDE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,oCAAA,CAAsC,CAAA,CAC9C,EACHhE,EAAC0H,EAAK,CACJ3G,OAAQH,EAAIG,OACZE,SAAUL,EAAIK,SACdlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CAAC,CAAA,CACC,EAGNa,GAAOhB,MAAagB,EAAIwH,WACvB/G,EAAApB,EAAA,CAAAH,SAAA,CACEE,EAACmI,EAAO,CAAC9D,QAAQ,WAAA,CAAa,EAE9BrE,EAAA,MAAA,CAAKD,UAAU,6FAA4FD,SACzGE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,6CAAA,CAA+C,CAAA,CACvD,CAAA,CACA,EAEJpD,EAAIwH,UAAUf,IAAKzG,GAClBS,EAAA,MAAA,CACE,cAAY,8BAEZtB,UAAU,qFAAoFD,UAE9FE,EAAA,IAAA,CAAAF,SAAIc,EAAIyH,KAAAA,CAAS,EAEjBrI,EAAC0H,EAAK,CACJ3G,OAAQH,EAAIG,OAAOC,MACnBC,SAAUL,EAAIG,OAAOE,SACrBlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CAAC,GAZGa,EAAIyH,KAaN,CACN,EAEDhH,EAAA,MAAA,CACE,cAAY,oCACZtB,UAAU,wIAAuID,UAEjJE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,yCAAA,CAA2C,CAAA,CACnD,EAEHhE,EAAC0H,EAAK,CACJ3G,OAAQH,EAAIG,OACZE,SAAUL,EAAIK,SACdlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CAAC,CAAA,CACC,EAELC,EAACmI,EAAO,CAAC9D,QAAQ,WAAA,CAAa,CAAC,CAC/B,CAAA,EAGHjE,GAASR,KACRyB,EAAA,MAAA,CACE,cAAY,+BACZtB,UAAU,0FAAyFD,UAEnGE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,sCAAA,CAAwC,CAAA,CAChD,EAEHhE,EAAC0H,EAAK,CACJ3G,OAAQX,GAAAA,YAAAA,EAAOU,QAAQC,OACvBE,SAAUb,GAAAA,YAAAA,EAAOU,QAAQG,SACzBlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CAAC,CAAA,CACC,EAELC,EAACiH,EAAc,CACbC,KAAM,EACN,cAAY,iDAAA,CACb,GAGF9G,GAAAA,YAAAA,EAAOkI,UAAW1I,MACjByB,EAAA,MAAA,CACE,cAAY,+BACZtB,UAAU,qFAAoFD,UAE9FE,EAAA,IAAA,CAAAF,SACEE,EAAC+D,EAAI,CAACC,GAAG,6CAAA,CAA+C,CAAA,CACvD,EAEHhE,EAAC0H,EAAK,CACJ3G,OAAQX,EAAMkI,QAAQvH,OACtBE,SAAUb,EAAMkI,QAAQrH,SACxBlB,UAAWiD,EAAQ,CACjB,0CACAjD,CAAS,CACV,CAAA,CACF,CAAC,CAAA,CACC,CACN,CAAA,CACG,CAEV,ECnQamI,GAA0CA,IAEnD7G,EAACkD,EAAQ,CACP,cAAY,4CACZxE,UAAW,mCAAmCD,SAAA,CAE9CE,EAACwE,EAAW,CAACH,QAAQ,UAAUP,KAAK,OAAA,CAAS,EAC7C9D,EAACwE,EAAW,CAACH,QAAQ,QAAQP,KAAK,OAAA,CAAS,EAC3C9D,EAACwE,EAAW,CAACH,QAAQ,QAAQP,KAAK,OAAA,CAAS,EAC3C9D,EAACwE,EAAW,CAACH,QAAQ,QAAQP,KAAK,OAAA,CAAS,EAC3C9D,EAACwE,EAAW,CAACH,QAAQ,UAAUP,KAAK,QAAQW,UAAW,GAAM8D,MAAO,CAAA,CAAI,CAAC,CAAA,CACjE,ECDDC,GAA2DA,CAAC,CACvEzI,UAAAA,EACA0I,KAAAA,EACAC,YAAAA,EAAc,EAChB,IAAM,CACJ,MAAMhE,EAAeC,EAAQ,CAC3BgE,OAAQ,gDACRC,UAAW,kDAAA,CACZ,EAED,IAAIC,EAAQJ,EAAKK,aACb1I,EAAQqI,EAAKrI,MAEbsI,IACFG,EAAQJ,EAAKM,aACb3I,EAAQqI,EAAKO,cAGf,MAAMC,EAAiB,CACrB,GAAI,wBAAyBR,EAAOA,EAAKS,oBAAsB,CAAC,EAChE,GAAI,eAAgBT,GAAQA,EAAKU,WAC7B,CAAE,CAACzE,EAAaiE,MAAM,EAAGF,EAAKU,UAAAA,EAC9B,CAAC,EACL,GAAI,gBAAiBV,GAAQA,EAAKW,YAC9B,CAAE,CAAC1E,EAAaiE,MAAM,EAAGF,EAAKW,WAAAA,EAC9B,CAAC,EACL,GAAI,kBAAmBX,GAAQA,EAAKY,cAChC,CAAE,CAAC3E,EAAakE,SAAS,EAAGH,EAAKY,aAAAA,EACjC,CAAC,EACL,GAAI,mBAAoBZ,GAAQA,EAAKa,eACjC,CAAE,CAAC5E,EAAakE,SAAS,EAAGH,EAAKa,cAAAA,EACjC,CAAC,CAAA,EAGP,OACEtJ,EAAA,MAAA,CACED,UAAWiD,EAAQ,CAAC,uCAAwCjD,CAAS,CAAC,EAAED,SAExEE,EAACuJ,GAAQ,CACP,cAAY,oBAEZb,YAAAA,EACAc,MAAOxJ,EAAA,MAAA,CAAK,cAAY,eAAcF,SAAE2I,EAAKvE,IAAAA,CAAU,EACvDuF,IAAKzJ,EAAA,MAAA,CAAAF,SAAM2I,EAAKgB,GAAAA,CAAS,EACzBC,SAAUjB,EAAKiB,SACfC,MACE3J,EAAC4J,GAAK,CACJC,IAAKpB,EAAKkB,MAAME,IAChBC,IAAKrB,EAAKkB,MAAMG,IAChBC,QAAQ,OACRC,MAAM,KACNC,OAAO,KACPC,OAAQ,CAAEF,MAAO,EAAG,CAAA,CACrB,EAEHf,eAAAA,EACAJ,MACE7I,EAAC0H,EAAK,CACJ3G,OAAQ0H,EAAKK,aAAa9H,MAC1BC,SAAU4H,EAAM5H,SAChBkJ,OAAO,QAAA,CACR,EAEH/J,MACEiB,EAAApB,EAAA,CAAAH,SAAA,CACEE,EAAC0H,EAAK,CACJ3G,OAAQ0H,EAAKK,aAAa9H,MAAQyH,EAAKiB,SACvCzI,SAAU4H,EAAM5H,SAChBoD,QAASoE,EAAK2B,WAAa,gBAAkB,SAC9C,CAAA,EAEA3B,EAAK2B,YACJpK,EAAC0H,EAAK,CAAC3G,OAAQX,EAAMY,MAAOC,SAAUb,EAAMa,SAAWoJ,KAAI,EAAA,CAAE,CAC9D,CAAA,CACD,CAAA,EAlCC5B,EAAK6B,GAoCX,CAAA,CACE,CAET,ECvFO,SAASC,GAAe9B,EAAuB,CAC7C,MAAA,CACL6B,IAAK7B,EAAKzE,GACV0F,SAAUjB,EAAK+B,iBACff,IAAKhB,EAAKgC,QAAShB,IACnBvF,KAAMuE,EAAKgC,QAASvG,KACpByF,MAAO,CACLE,IAAKpB,EAAKgC,QAASC,UAAWC,IAC9Bb,IAAKrB,EAAKgC,QAASC,UAAWrC,KAChC,EACAQ,MAAO,CACL7H,MAAOyH,EAAKmC,mBAAmB5J,MAC/BC,SAAUwH,EAAKmC,mBAAmB3J,QACpC,EACA8H,aAAc,CACZ/H,MAAOyH,EAAKmC,mBAAmB5J,MAC/BC,SAAUwH,EAAKmC,mBAAmB3J,QACpC,EACAb,MAAO,CACLY,MAAOyH,EAAKmC,mBAAmB5J,MAASyH,EAAK+B,iBAC7CvJ,SAAUwH,EAAKmC,mBAAmB3J,QACpC,EACA+H,aAAc,CACZhI,MAAOyH,EAAKmC,mBAAmB5J,MAASyH,EAAK+B,iBAC7CvJ,SAAUwH,EAAKmC,mBAAmB3J,QACpC,EACA4J,SAAU,CACR7J,MAAO,EACPC,SAAUwH,EAAKmC,mBAAmB3J,QACpC,EACA6H,aAAc,CACZ9H,MAAOyH,EAAKgC,QAASK,YAAYC,cAAeC,cAAchK,MAC9DC,SACEwH,EAAKgC,QAASK,YAAYC,cAAeC,cAAc/J,QAC3D,EACAmJ,WACE3B,EAAKgC,QAASK,YAAYC,cAAeC,cAAchK,MACrDyH,EAAK+B,mBACP/B,EAAKmC,mBAAmB5J,MAASyH,EAAK+B,iBACxCtB,oBAAqB+B,GAA6BxC,CAAI,EACtDU,WACEV,EAAKyC,aAAe,oBAChBzC,EAAK0C,UAAWC,YAChBxL,OACNwJ,YACEX,EAAKyC,aAAe,oBAChBzC,EAAK0C,UAAWE,aAChBzL,OACN0J,eACEb,EAAKyC,aAAe,oBAChBzC,EAAK0C,UAAWG,gBAChB1L,OACNyJ,cACEZ,EAAKyC,aAAe,oBAChBzC,EAAK0C,UAAWI,eAChB3L,MAAAA,CAEV,CACA,SAASqL,GAA6BxC,EAAuB,CAC3D,GAAI,EAAE,qBAAsBA,GAAO,OAEnC,MAAMS,EAA8C,CAAA,EAEzCsC,UAAAA,KAAU/C,EAAKgD,iBACJD,EAAAA,EAAQnD,KAAK,EAAImD,EAAQxK,MAGxCkI,OAAAA,CACT,CCzDO,MAAM3H,GAAmDA,CAAC,CAC/DhC,UAAAA,EACAC,QAAAA,CACF,IAAM,CACJ,GAAID,EACKS,OAAAA,EAAC0L,GAAmB,CAAA,CAAE,EAI/B,MAAMhD,EAAc,GACdiD,EAAQnM,EAASmM,MAQjBC,EAAgBD,EAAM7E,OAE5B,OACE9G,EAAA,MAAA,CAAKD,UAAU,kCAAiCD,SAC9CuB,EAAC+D,EAAI,CAACf,QAAQ,YAAWvE,UACvBE,EAAA,MAAA,CAAKD,UAAU,2CAA0CD,SACvDuB,EAAA,KAAA,CAAItB,UAAW,yCAAyCD,SAAA,CACtDE,EAAC+D,EAAI,CAACC,GAAG,qCAAA,CAAuC,EAAC,KAAG4H,EAAc,GACpE,CAAA,CAAI,CAAA,CACD,EACL5L,EAACmI,EAAO,CACNpI,UAAU,+CACVsE,QAAQ,SAAA,CACT,EAEDrE,EAAA,MAAA,CAAKD,UAAU,yCAAwCD,SACpD6L,GAAAA,YAAAA,EAAOtE,IAAKoB,GAAc,CACnBoD,MAAAA,EAAWtB,GAAe9B,CAAI,EACpC,OACEzI,EAACwI,GAAe,CAEdC,KAAMoD,EACNnD,YAAAA,CAAAA,EAFKmD,GAAAA,YAAAA,EAAUvB,GAGhB,CAAA,EAEJ,CACE,CAAC,CAAA,CACF,CAAA,CACH,CAET,EC7DaoB,GAAyCA,IAElDrK,EAACkD,EAAQ,CACP,cAAY,wBACZxE,UAAU,kCACV+L,MAAO,CAAEC,oBAAqB,KAAM,EAAEjM,SAAA,CAEtCE,EAACwE,EAAW,CAACH,QAAQ,UAAUI,UAAW,GAAMX,KAAK,QAAA,CAAU,EAC/D9D,EAACgM,EAAgB,CAAE,CAAA,EACnBhM,EAACgM,EAAgB,CAAE,CAAA,EACnBhM,EAACgM,EAAkB,EAAA,EACnBhM,EAACgM,EAAkB,CAAA,CAAA,EACnBhM,EAACgM,IAAkB,CAAC,CAAA,CACZ,ECTP,SAASC,EACdC,EACsB,CACf,MAAA,CACL1E,OAAQ,CACN2E,UAAWD,GAAAA,MAAAA,EAASC,UAAYC,OAAOF,GAAAA,YAAAA,EAASC,SAAS,EAAI,KAC7D3E,OAAQ0E,GAAAA,YAAAA,EAAS1E,MACnB,EACAD,KAAM2E,GAAAA,YAAAA,EAAS3E,KACf8E,QAASH,GAAAA,YAAAA,EAASG,QAClB5E,aAAcyE,GAAAA,YAAAA,EAASzE,aACvBzF,UAAWkK,GAAAA,YAAAA,EAASlK,UACpBmF,SAAU+E,GAAAA,YAAAA,EAAS/E,SACnBmF,WAAYJ,GAAAA,YAAAA,EAASI,WACrBzH,SAAUqH,GAAAA,YAAAA,EAASrH,SACnBuC,OAAQ8E,GAAAA,YAAAA,EAAS9E,OACjBmF,UAAWL,GAAAA,YAAAA,EAASK,SAAAA,CAExB,CCuBA,SAASC,GAAqBC,EAAmB,CAC/C,KAAM,CAACrN,EAAOsN,CAAQ,EAAIC,GAAWxN,GAA0B,CAC7DI,UAAW,GACXkN,SAAAA,EACAjN,QAAS,KACTE,sBAAuB,EAAA,CACxB,EACK,CAACkN,EAAeC,CAAgB,EAAIhP,GAA8B,EAElE6G,EAAeC,EAAQ,CAC3BmI,aAAc,wCACdC,cAAe,yCACfC,aAAc,wCACdC,QAAS,kCAAA,CACV,EAEKC,EAAaC,EAChBhK,GAAuC,CACtC,OAAQA,EAAO,CACb,IAAK,gBACL,IAAK,kBACL,IAAK,6DACI,MAAA,CACL7D,KAAMX,EAAUE,QAChBiE,KAAM/D,EAAUC,cAChBmE,QAASuB,EAAaoI,YAAAA,EAE1B,IAAK,iBACI,MAAA,CACLxN,KAAMX,EAAUE,QAChBiE,KAAM/D,EAAUE,eAChBkE,QAASuB,EAAaqI,aAAAA,CAE5B,GAEF,CAACrI,EAAaoI,aAAcpI,EAAaqI,aAAa,CACxD,EAEMtK,EAAeA,IAAM,CAChBiK,EAAA,CAAEpN,KAAMjB,EAAQK,aAAAA,CAAe,CAAA,EAGpC0O,EAAoB,SAAUnJ,EAA2B,CAC7DoJ,EAAsBpJ,CAAM,CAAA,EAG9BnG,EAAU,IAAM,CACd,MAAMwP,EAAwBC,GAAOC,GACnC,gBACqBC,GAAA,CACnBZ,EAAiBY,CAAe,CAAA,EAElC,CAAEC,MAAO,EAAA,CACX,EACA,MAAO,IAAM,CACXJ,GAAAA,MAAAA,EAAuBK,KAAI,CAE/B,EAAG,CAAE,CAAA,EAECN,MAAAA,EAAwBF,EAC3BlJ,GAA+B,CACnBA,EAAAA,GACR2J,KAAkBpO,GAAA,CAIjB,MAAMC,EAFkB,CAAC,EAACD,GAAAA,MAAAA,EAAS0C,QAG/BtC,OACAsN,EAAW,gBAAgB,EAEtBR,EAAA,CACPpN,KAAMjB,EAAQG,YACdmB,eAAgB,GAChBF,MAAAA,EACAD,QAAAA,CAAAA,CACD,CAAA,CACF,EACAqO,MAAM,IAAM,CACLpO,MAAAA,EAAQyN,EAAW,gBAAgB,EAEhCR,EAAA,CACPpN,KAAMjB,EAAQG,YACdgB,QAAS,KACTC,MAAAA,CAAAA,CACD,CAAA,CACF,CAAA,EAEL,CAACyN,CAAU,CACb,EAEMY,EAAoBX,EACvBV,GAAqB,EACMG,EACtBmB,EACAC,GAEcvB,CAAQ,EACvBmB,KAAkBpO,GAAA,CAIjB,MAAMC,EAFkB,CAAC,EAACD,GAAAA,MAAAA,EAAS0C,QAG/BtC,OACAsN,EAAW,eAAe,EAErBR,EAAA,CACPpN,KAAMjB,EAAQG,YACdgB,QAAAA,EACAC,MAAAA,CAAAA,CACD,CAAA,CACF,EACAoO,MAAiBI,GAAA,CACVC,MAAAA,EAAahB,EAAWe,EAAM9K,OAAO,EAE3C,GAAI,CAAC+K,EAAY,CACfC,QAAQF,MAAMA,CAAK,EACnB,MACF,CAESvB,EAAA,CACPpN,KAAMjB,EAAQI,MACdgB,MAAOyO,CAAAA,CACR,CAAA,CACF,CAAA,EAEL,CAACtB,EAAeM,CAAU,CAC5B,EAEApP,OAAAA,EAAU,IAAM,CACV,CAACsB,EAAMqN,UAAYG,IAAkBhN,SAEhC8M,EAAA,CAAEpN,KAAMjB,EAAQE,OAAAA,CAAS,EAElCuP,EAAkB1O,EAAMqN,QAAQ,IAC/B,CAACG,EAAekB,EAAmB1O,EAAMqN,QAAQ,CAAC,EAE9C,CACLrN,MAAAA,EACAwN,cAAAA,EACAQ,kBAAAA,EACA3K,aAAAA,CAAAA,CAEJ,CAEO,MAAME,GAAuDA,CAAC,CACnE8J,SAAAA,EACA/K,UAAAA,EACAC,aAAAA,EACAC,cAAAA,CACF,IAAM,CACE,KAAA,CAAExC,MAAAA,EAAOwN,cAAAA,EAAeQ,kBAAAA,EAAmB3K,aAAAA,CAAAA,EAC/C+J,GAAqBC,CAAQ,EAE/B,GAAIG,IAAkBhN,OACb,OAAA,KAMHwO,MAAAA,EAFJxM,GAAiB,CAACgL,GAAiB,CAACxN,EAAMM,sBAGxC,IAAM,WACEwG,MAAAA,GAAkB9G,EAAAA,EAAMI,UAANJ,YAAAA,EAAe+G,iBACjCtE,GAAiBzC,EAAAA,EAAMI,UAANJ,YAAAA,EAAe0C,gBAEhCuM,EAA4D,CAChE,CAAEvL,KAAM,YAAawL,cAAczM,GAAAA,YAAAA,EAAgBG,YAAa,EAAA,EAChE,CAAEc,KAAM,WAAYwL,cAAczM,GAAAA,YAAAA,EAAgBsF,WAAY,EAAA,EAC9D,CAAErE,KAAM,QAASwL,eAAclP,EAAAA,EAAMI,UAANJ,YAAAA,EAAewF,QAAS,EAAA,CAAI,EAGzD2J,IAAAA,EAEJ,GAAIrI,EAAiB,CACnB,MAAMsI,EAAgD,CACpD,GAAGvC,EAAyB/F,CAAe,EAC3CuI,iBAAkB,EAAA,EAQJF,EAAA,CALqC,CACnD,GAAGtC,EAAyBpK,CAAc,EAC1C6M,gBAAiB,EAAA,EAGsBF,CAAuB,CAAA,MAQhED,EAAgB,CAN8B,CAC5C,GAAGtC,EAAyBpK,CAAc,EAC1C6M,gBAAiB,GACjBD,iBAAkB,EAAA,CAGY,EAGpB7M,EAAA,CAAEyM,sBAAAA,EAAuBE,cAAAA,CAAAA,CAAe,CAExD3O,EAAAA,OAEJ,OACEI,EAAC2O,GAAS,CACRvP,MAAAA,EACAqD,aAAAA,EACAC,cAAe0K,EACf1L,UAAAA,EACAC,aAAAA,EACAC,cAAewM,CAAAA,CAChB,CAEL","x_google_ignoreList":[3,4]}